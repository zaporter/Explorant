a.out:	file format elf64-x86-64

.debug_abbrev contents:
Abbrev table for offset: 0x00000000
[1] DW_TAG_base_type	DW_CHILDREN_no
	DW_AT_byte_size	DW_FORM_data1
	DW_AT_encoding	DW_FORM_data1
	DW_AT_name	DW_FORM_strp

[2] DW_TAG_compile_unit	DW_CHILDREN_yes
	DW_AT_producer	DW_FORM_strp
	DW_AT_language	DW_FORM_data1
	DW_AT_name	DW_FORM_line_strp
	DW_AT_comp_dir	DW_FORM_line_strp
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data8
	DW_AT_stmt_list	DW_FORM_sec_offset
	DW_AT_macros	DW_FORM_sec_offset

[3] DW_TAG_base_type	DW_CHILDREN_no
	DW_AT_byte_size	DW_FORM_data1
	DW_AT_encoding	DW_FORM_data1
	DW_AT_name	DW_FORM_string

[4] DW_TAG_const_type	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[5] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_external	DW_FORM_flag_present
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data2
	DW_AT_decl_column	DW_FORM_data1
	DW_AT_prototyped	DW_FORM_flag_present
	DW_AT_type	DW_FORM_ref4
	DW_AT_declaration	DW_FORM_flag_present
	DW_AT_sibling	DW_FORM_ref4

[6] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[7] DW_TAG_unspecified_parameters	DW_CHILDREN_no

[8] DW_TAG_pointer_type	DW_CHILDREN_no
	DW_AT_byte_size	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[9] DW_TAG_subprogram	DW_CHILDREN_no
	DW_AT_external	DW_FORM_flag_present
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_decl_column	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data8
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_call_all_tail_calls	DW_FORM_flag_present

[10] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_external	DW_FORM_flag_present
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_decl_column	DW_FORM_data1
	DW_AT_prototyped	DW_FORM_flag_present
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data8
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_call_all_tail_calls	DW_FORM_flag_present

[11] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_name	DW_FORM_string
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_decl_column	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_location	DW_FORM_exprloc

[12] DW_TAG_lexical_block	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data8

[13] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_name	DW_FORM_string
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_decl_column	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_location	DW_FORM_exprloc


.debug_info contents:
0x00000000: Compile Unit: length = 0x000000f8, format = DWARF32, version = 0x0005, unit_type = DW_UT_compile, abbr_offset = 0x0000, addr_size = 0x08 (next unit at 0x000000fc)

0x0000000c: DW_TAG_compile_unit [2] *
              DW_AT_producer [DW_FORM_strp]	( .debug_str[0x000008fc] = "GNU C17 11.3.0 -mtune=generic -march=x86-64 -g3 -O0 -fasynchronous-unwind-tables -fstack-protector-strong -fstack-clash-protection -fcf-protection")
              DW_AT_language [DW_FORM_data1]	(DW_LANG_C11)
              DW_AT_name [DW_FORM_line_strp]	( .debug_line_str[0x00000000] = "simple.c")
              DW_AT_comp_dir [DW_FORM_line_strp]	( .debug_line_str[0x00000009] = "/home/zack/Tools/MQP/code_slicer/examples/simple")
              DW_AT_low_pc [DW_FORM_addr]	(0x0000000000001169)
              DW_AT_high_pc [DW_FORM_data8]	(0x00000000000000a0)
              DW_AT_stmt_list [DW_FORM_sec_offset]	(0x00000000)
              DW_AT_macros [DW_FORM_sec_offset]	(0x00000000)

0x00000032:   DW_TAG_base_type [1]   (0x0000000c)
                DW_AT_byte_size [DW_FORM_data1]	(0x01)
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_unsigned_char)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00004562] = "unsigned char")

0x00000039:   DW_TAG_base_type [1]   (0x0000000c)
                DW_AT_byte_size [DW_FORM_data1]	(0x02)
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_unsigned)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000888] = "short unsigned int")

0x00000040:   DW_TAG_base_type [1]   (0x0000000c)
                DW_AT_byte_size [DW_FORM_data1]	(0x04)
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_unsigned)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000213f] = "unsigned int")

0x00000047:   DW_TAG_base_type [1]   (0x0000000c)
                DW_AT_byte_size [DW_FORM_data1]	(0x08)
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_unsigned)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000cf1] = "long unsigned int")

0x0000004e:   DW_TAG_base_type [1]   (0x0000000c)
                DW_AT_byte_size [DW_FORM_data1]	(0x01)
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed_char)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000040da] = "signed char")

0x00000055:   DW_TAG_base_type [1]   (0x0000000c)
                DW_AT_byte_size [DW_FORM_data1]	(0x02)
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00002ad7] = "short int")

0x0000005c:   DW_TAG_base_type [3]   (0x0000000c)
                DW_AT_byte_size [DW_FORM_data1]	(0x04)
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed)
                DW_AT_name [DW_FORM_string]	("int")

0x00000063:   DW_TAG_base_type [1]   (0x0000000c)
                DW_AT_byte_size [DW_FORM_data1]	(0x08)
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000045b0] = "long int")

0x0000006a:   DW_TAG_base_type [1]   (0x0000000c)
                DW_AT_byte_size [DW_FORM_data1]	(0x01)
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed_char)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000040e1] = "char")

0x00000071:   DW_TAG_const_type [4]   (0x0000000c)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x006a => {0x0000006a} "char")

0x00000076:   DW_TAG_subprogram [5] * (0x0000000c)
                DW_AT_external [DW_FORM_flag_present]	(true)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00002d09] = "printf")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/include/stdio.h")
                DW_AT_decl_line [DW_FORM_data2]	(356)
                DW_AT_decl_column [DW_FORM_data1]	(0x0c)
                DW_AT_prototyped [DW_FORM_flag_present]	(true)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x005c => {0x0000005c} "int")
                DW_AT_declaration [DW_FORM_flag_present]	(true)
                DW_AT_sibling [DW_FORM_ref4]	(cu + 0x008e => {0x0000008e})

0x00000087:     DW_TAG_formal_parameter [6]   (0x00000076)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x008e => {0x0000008e} "const char *")

0x0000008c:     DW_TAG_unspecified_parameters [7]   (0x00000076)

0x0000008d:     NULL

0x0000008e:   DW_TAG_pointer_type [8]   (0x0000000c)
                DW_AT_byte_size [DW_FORM_data1]	(0x08)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0071 => {0x00000071} "const char")

0x00000094:   DW_TAG_subprogram [9]   (0x0000000c)
                DW_AT_external [DW_FORM_flag_present]	(true)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00004832] = "main")
                DW_AT_decl_file [DW_FORM_data1]	("/home/zack/Tools/MQP/code_slicer/examples/simple/simple.c")
                DW_AT_decl_line [DW_FORM_data1]	(15)
                DW_AT_decl_column [DW_FORM_data1]	(0x05)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x005c => {0x0000005c} "int")
                DW_AT_low_pc [DW_FORM_addr]	(0x00000000000011aa)
                DW_AT_high_pc [DW_FORM_data8]	(0x000000000000005f)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_call_frame_cfa)
                DW_AT_call_all_tail_calls [DW_FORM_flag_present]	(true)

0x000000b2:   DW_TAG_subprogram [10] * (0x0000000c)
                DW_AT_external [DW_FORM_flag_present]	(true)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000ace] = "count_to")
                DW_AT_decl_file [DW_FORM_data1]	("/home/zack/Tools/MQP/code_slicer/examples/simple/simple.c")
                DW_AT_decl_line [DW_FORM_data1]	(6)
                DW_AT_decl_column [DW_FORM_data1]	(0x06)
                DW_AT_prototyped [DW_FORM_flag_present]	(true)
                DW_AT_low_pc [DW_FORM_addr]	(0x0000000000001169)
                DW_AT_high_pc [DW_FORM_data8]	(0x0000000000000041)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_call_frame_cfa)
                DW_AT_call_all_tail_calls [DW_FORM_flag_present]	(true)

0x000000cc:     DW_TAG_formal_parameter [11]   (0x000000b2)
                  DW_AT_name [DW_FORM_string]	("num")
                  DW_AT_decl_file [DW_FORM_data1]	("/home/zack/Tools/MQP/code_slicer/examples/simple/simple.c")
                  DW_AT_decl_line [DW_FORM_data1]	(6)
                  DW_AT_decl_column [DW_FORM_data1]	(0x13)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x005c => {0x0000005c} "int")
                  DW_AT_location [DW_FORM_exprloc]	(DW_OP_fbreg -36)

0x000000db:     DW_TAG_lexical_block [12] * (0x000000b2)
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000001178)
                  DW_AT_high_pc [DW_FORM_data8]	(0x000000000000002e)

0x000000ec:       DW_TAG_variable [13]   (0x000000db)
                    DW_AT_name [DW_FORM_string]	("i")
                    DW_AT_decl_file [DW_FORM_data1]	("/home/zack/Tools/MQP/code_slicer/examples/simple/simple.c")
                    DW_AT_decl_line [DW_FORM_data1]	(8)
                    DW_AT_decl_column [DW_FORM_data1]	(0x0e)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x005c => {0x0000005c} "int")
                    DW_AT_location [DW_FORM_exprloc]	(DW_OP_fbreg -20)

0x000000f9:       NULL

0x000000fa:     NULL

0x000000fb:   NULL

.eh_frame contents:

00000000 00000014 00000000 CIE
  Format:                DWARF32
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1B

  DW_CFA_def_cfa: RSP +8
  DW_CFA_offset: RIP -8
  DW_CFA_nop:
  DW_CFA_nop:

  CFA=RSP+8: RIP=[CFA-8]

00000018 00000014 0000001c FDE cie=00000000 pc=00001080...000010a6
  Format:       DWARF32
  DW_CFA_advance_loc: 4
  DW_CFA_undefined: RIP
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:

  0x1080: CFA=RSP+8: RIP=[CFA-8]
  0x1084: CFA=RSP+8: RIP=undefined

00000030 00000024 00000034 FDE cie=00000000 pc=00001020...00001050
  Format:       DWARF32
  DW_CFA_def_cfa_offset: +16
  DW_CFA_advance_loc: 6
  DW_CFA_def_cfa_offset: +24
  DW_CFA_advance_loc: 10
  DW_CFA_def_cfa_expression: DW_OP_breg7 RSP+8, DW_OP_breg16 RIP+0, DW_OP_lit15, DW_OP_and, DW_OP_lit10, DW_OP_ge, DW_OP_lit3, DW_OP_shl, DW_OP_plus
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:

  0x1020: CFA=RSP+16: RIP=[CFA-8]
  0x1026: CFA=RSP+24: RIP=[CFA-8]
  0x1030: CFA=DW_OP_breg7 RSP+8, DW_OP_breg16 RIP+0, DW_OP_lit15, DW_OP_and, DW_OP_lit10, DW_OP_ge, DW_OP_lit3, DW_OP_shl, DW_OP_plus: RIP=[CFA-8]

00000058 00000014 0000005c FDE cie=00000000 pc=00001050...00001060
  Format:       DWARF32
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:

  0x1050: CFA=RSP+8: RIP=[CFA-8]

00000070 00000014 00000074 FDE cie=00000000 pc=00001060...00001080
  Format:       DWARF32
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:

  0x1060: CFA=RSP+8: RIP=[CFA-8]

00000088 0000001c 0000008c FDE cie=00000000 pc=00001169...000011aa
  Format:       DWARF32
  DW_CFA_advance_loc: 5
  DW_CFA_def_cfa_offset: +16
  DW_CFA_offset: RBP -16
  DW_CFA_advance_loc: 3
  DW_CFA_def_cfa_register: RBP
  DW_CFA_advance_loc: 56
  DW_CFA_def_cfa: RSP +8
  DW_CFA_nop:
  DW_CFA_nop:
  DW_CFA_nop:

  0x1169: CFA=RSP+8: RIP=[CFA-8]
  0x116e: CFA=RSP+16: RBP=[CFA-16], RIP=[CFA-8]
  0x1171: CFA=RBP+16: RBP=[CFA-16], RIP=[CFA-8]
  0x11a9: CFA=RSP+8: RBP=[CFA-16], RIP=[CFA-8]

000000a8 0000001c 000000ac FDE cie=00000000 pc=000011aa...00001209
  Format:       DWARF32
  DW_CFA_advance_loc: 5
  DW_CFA_def_cfa_offset: +16
  DW_CFA_offset: RBP -16
  DW_CFA_advance_loc: 3
  DW_CFA_def_cfa_register: RBP
  DW_CFA_advance_loc1: 86
  DW_CFA_def_cfa: RSP +8
  DW_CFA_nop:
  DW_CFA_nop:

  0x11aa: CFA=RSP+8: RIP=[CFA-8]
  0x11af: CFA=RSP+16: RBP=[CFA-16], RIP=[CFA-8]
  0x11b2: CFA=RBP+16: RBP=[CFA-16], RIP=[CFA-8]
  0x1208: CFA=RSP+8: RBP=[CFA-16], RIP=[CFA-8]

000000c8 ZERO terminator

.debug_macro contents:
0x00000000:
macro header: version = 0x0005, flags = 0x02, format = DWARF32, debug_line_offset = 0x00000000
DW_MACRO_import - import offset: 0x000001d7
DW_MACRO_start_file - lineno: 0 filenum: 1
  DW_MACRO_start_file - lineno: 0 filenum: 3
    DW_MACRO_import - import offset: 0x00000a51
  DW_MACRO_end_file
  DW_MACRO_start_file - lineno: 1 filenum: 4
    DW_MACRO_define_strp - lineno: 19 macro: _SYS_TIME_H 1
    DW_MACRO_start_file - lineno: 21 filenum: 5
      DW_MACRO_import - import offset: 0x00000a79
      DW_MACRO_start_file - lineno: 392 filenum: 6
        DW_MACRO_start_file - lineno: 20 filenum: 7
          DW_MACRO_import - import offset: 0x00000bfb
        DW_MACRO_end_file
        DW_MACRO_start_file - lineno: 21 filenum: 8
          DW_MACRO_start_file - lineno: 19 filenum: 7
            DW_MACRO_import - import offset: 0x00000bfb
          DW_MACRO_end_file
          DW_MACRO_define_strp - lineno: 26 macro: __TIMESIZE __WORDSIZE
        DW_MACRO_end_file
      DW_MACRO_end_file
      DW_MACRO_import - import offset: 0x00000c11
      DW_MACRO_start_file - lineno: 486 filenum: 9
        DW_MACRO_import - import offset: 0x00000c5b
        DW_MACRO_start_file - lineno: 559 filenum: 7
          DW_MACRO_import - import offset: 0x00000bfb
        DW_MACRO_end_file
        DW_MACRO_start_file - lineno: 560 filenum: 10
          DW_MACRO_define_strp - lineno: 21 macro: __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI 0
        DW_MACRO_end_file
        DW_MACRO_import - import offset: 0x00000e32
      DW_MACRO_end_file
      DW_MACRO_start_file - lineno: 510 filenum: 11
        DW_MACRO_start_file - lineno: 10 filenum: 12
          DW_MACRO_import - import offset: 0x00000ead
        DW_MACRO_end_file
      DW_MACRO_end_file
    DW_MACRO_end_file
    DW_MACRO_start_file - lineno: 23 filenum: 13
      DW_MACRO_define_strp - lineno: 24 macro: _BITS_TYPES_H 1
      DW_MACRO_start_file - lineno: 27 filenum: 7
        DW_MACRO_import - import offset: 0x00000bfb
      DW_MACRO_end_file
      DW_MACRO_start_file - lineno: 28 filenum: 8
        DW_MACRO_start_file - lineno: 19 filenum: 7
          DW_MACRO_import - import offset: 0x00000bfb
        DW_MACRO_end_file
        DW_MACRO_define_strp - lineno: 26 macro: __TIMESIZE __WORDSIZE
      DW_MACRO_end_file
      DW_MACRO_import - import offset: 0x00000ee1
      DW_MACRO_start_file - lineno: 141 filenum: 14
        DW_MACRO_import - import offset: 0x00000f48
      DW_MACRO_end_file
      DW_MACRO_start_file - lineno: 142 filenum: 15
        DW_MACRO_import - import offset: 0x00001048
      DW_MACRO_end_file
      DW_MACRO_undef_strp - lineno: 226 macro: __STD_TYPE
    DW_MACRO_end_file
    DW_MACRO_start_file - lineno: 24 filenum: 16
      DW_MACRO_define_strp - lineno: 2 macro: __time_t_defined 1
    DW_MACRO_end_file
    DW_MACRO_start_file - lineno: 25 filenum: 17
      DW_MACRO_define_strp - lineno: 2 macro: __timeval_defined 1
    DW_MACRO_end_file
    DW_MACRO_define_strp - lineno: 29 macro: __suseconds_t_defined 
    DW_MACRO_start_file - lineno: 32 filenum: 18
      DW_MACRO_define_strp - lineno: 22 macro: _SYS_SELECT_H 1
      DW_MACRO_start_file - lineno: 30 filenum: 19
        DW_MACRO_import - import offset: 0x00001058
      DW_MACRO_end_file
      DW_MACRO_start_file - lineno: 33 filenum: 20
        DW_MACRO_define_strp - lineno: 2 macro: __sigset_t_defined 1
        DW_MACRO_start_file - lineno: 4 filenum: 21
          DW_MACRO_import - import offset: 0x00001074
        DW_MACRO_end_file
      DW_MACRO_end_file
      DW_MACRO_start_file - lineno: 39 filenum: 22
        DW_MACRO_define_strp - lineno: 3 macro: _STRUCT_TIMESPEC 1
        DW_MACRO_start_file - lineno: 6 filenum: 23
          DW_MACRO_import - import offset: 0x00001084
          DW_MACRO_start_file - lineno: 35 filenum: 24
            DW_MACRO_import - import offset: 0x000010a0
          DW_MACRO_end_file
          DW_MACRO_import - import offset: 0x000010b0
        DW_MACRO_end_file
      DW_MACRO_end_file
      DW_MACRO_import - import offset: 0x000010c0
    DW_MACRO_end_file
    DW_MACRO_import - import offset: 0x00001106
  DW_MACRO_end_file
  DW_MACRO_start_file - lineno: 2 filenum: 2
    DW_MACRO_import - import offset: 0x0000113f
    DW_MACRO_start_file - lineno: 27 filenum: 25
      DW_MACRO_import - import offset: 0x0000114f
    DW_MACRO_end_file
    DW_MACRO_import - import offset: 0x000011ad
    DW_MACRO_start_file - lineno: 33 filenum: 26
      DW_MACRO_import - import offset: 0x000011bd
    DW_MACRO_end_file
    DW_MACRO_define_strp - lineno: 35 macro: __need___va_list 
    DW_MACRO_start_file - lineno: 36 filenum: 27
      DW_MACRO_import - import offset: 0x00001254
    DW_MACRO_end_file
    DW_MACRO_start_file - lineno: 39 filenum: 28
      DW_MACRO_define_strp - lineno: 2 macro: _____fpos_t_defined 1
      DW_MACRO_start_file - lineno: 5 filenum: 29
        DW_MACRO_define_strp - lineno: 2 macro: ____mbstate_t_defined 1
      DW_MACRO_end_file
    DW_MACRO_end_file
    DW_MACRO_start_file - lineno: 40 filenum: 30
      DW_MACRO_define_strp - lineno: 2 macro: _____fpos64_t_defined 1
    DW_MACRO_end_file
    DW_MACRO_start_file - lineno: 41 filenum: 31
      DW_MACRO_define_strp - lineno: 2 macro: ____FILE_defined 1
    DW_MACRO_end_file
    DW_MACRO_start_file - lineno: 42 filenum: 32
      DW_MACRO_define_strp - lineno: 2 macro: __FILE_defined 1
    DW_MACRO_end_file
    DW_MACRO_start_file - lineno: 43 filenum: 33
      DW_MACRO_import - import offset: 0x00001264
    DW_MACRO_end_file
    DW_MACRO_import - import offset: 0x00001298
    DW_MACRO_start_file - lineno: 133 filenum: 34
      DW_MACRO_import - import offset: 0x000012e4
    DW_MACRO_end_file
    DW_MACRO_import - import offset: 0x00001312
    DW_MACRO_start_file - lineno: 430 filenum: 35
      DW_MACRO_import - import offset: 0x00001339
      DW_MACRO_start_file - lineno: 119 filenum: 36
        DW_MACRO_define_strp - lineno: 21 macro: _BITS_FLOATN_COMMON_H 
        DW_MACRO_start_file - lineno: 24 filenum: 10
          DW_MACRO_define_strp - lineno: 21 macro: __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI 0
        DW_MACRO_end_file
        DW_MACRO_import - import offset: 0x00001367
      DW_MACRO_end_file
    DW_MACRO_end_file
  DW_MACRO_end_file
DW_MACRO_end_file

0x000001d7:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 0 macro: __STDC__ 1
DW_MACRO_define_strp - lineno: 0 macro: __STDC_VERSION__ 201710L
DW_MACRO_define_strp - lineno: 0 macro: __STDC_UTF_16__ 1
DW_MACRO_define_strp - lineno: 0 macro: __STDC_UTF_32__ 1
DW_MACRO_define_strp - lineno: 0 macro: __STDC_HOSTED__ 1
DW_MACRO_define_strp - lineno: 0 macro: __GNUC__ 11
DW_MACRO_define_strp - lineno: 0 macro: __GNUC_MINOR__ 3
DW_MACRO_define_strp - lineno: 0 macro: __GNUC_PATCHLEVEL__ 0
DW_MACRO_define_strp - lineno: 0 macro: __VERSION__ "11.3.0"
DW_MACRO_define_strp - lineno: 0 macro: __ATOMIC_RELAXED 0
DW_MACRO_define_strp - lineno: 0 macro: __ATOMIC_SEQ_CST 5
DW_MACRO_define_strp - lineno: 0 macro: __ATOMIC_ACQUIRE 2
DW_MACRO_define_strp - lineno: 0 macro: __ATOMIC_RELEASE 3
DW_MACRO_define_strp - lineno: 0 macro: __ATOMIC_ACQ_REL 4
DW_MACRO_define_strp - lineno: 0 macro: __ATOMIC_CONSUME 1
DW_MACRO_define_strp - lineno: 0 macro: __pic__ 2
DW_MACRO_define_strp - lineno: 0 macro: __PIC__ 2
DW_MACRO_define_strp - lineno: 0 macro: __pie__ 2
DW_MACRO_define_strp - lineno: 0 macro: __PIE__ 2
DW_MACRO_define_strp - lineno: 0 macro: __FINITE_MATH_ONLY__ 0
DW_MACRO_define_strp - lineno: 0 macro: _LP64 1
DW_MACRO_define_strp - lineno: 0 macro: __LP64__ 1
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_INT__ 4
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_LONG__ 8
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_LONG_LONG__ 8
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_SHORT__ 2
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_FLOAT__ 4
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_DOUBLE__ 8
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_LONG_DOUBLE__ 16
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_SIZE_T__ 8
DW_MACRO_define_strp - lineno: 0 macro: __CHAR_BIT__ 8
DW_MACRO_define_strp - lineno: 0 macro: __BIGGEST_ALIGNMENT__ 16
DW_MACRO_define_strp - lineno: 0 macro: __ORDER_LITTLE_ENDIAN__ 1234
DW_MACRO_define_strp - lineno: 0 macro: __ORDER_BIG_ENDIAN__ 4321
DW_MACRO_define_strp - lineno: 0 macro: __ORDER_PDP_ENDIAN__ 3412
DW_MACRO_define_strp - lineno: 0 macro: __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
DW_MACRO_define_strp - lineno: 0 macro: __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_POINTER__ 8
DW_MACRO_define_strp - lineno: 0 macro: __GNUC_EXECUTION_CHARSET_NAME "UTF-8"
DW_MACRO_define_strp - lineno: 0 macro: __GNUC_WIDE_EXECUTION_CHARSET_NAME "UTF-32LE"
DW_MACRO_define_strp - lineno: 0 macro: __SIZE_TYPE__ long unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __PTRDIFF_TYPE__ long int
DW_MACRO_define_strp - lineno: 0 macro: __WCHAR_TYPE__ int
DW_MACRO_define_strp - lineno: 0 macro: __WINT_TYPE__ unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __INTMAX_TYPE__ long int
DW_MACRO_define_strp - lineno: 0 macro: __UINTMAX_TYPE__ long unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __CHAR16_TYPE__ short unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __CHAR32_TYPE__ unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __SIG_ATOMIC_TYPE__ int
DW_MACRO_define_strp - lineno: 0 macro: __INT8_TYPE__ signed char
DW_MACRO_define_strp - lineno: 0 macro: __INT16_TYPE__ short int
DW_MACRO_define_strp - lineno: 0 macro: __INT32_TYPE__ int
DW_MACRO_define_strp - lineno: 0 macro: __INT64_TYPE__ long int
DW_MACRO_define_strp - lineno: 0 macro: __UINT8_TYPE__ unsigned char
DW_MACRO_define_strp - lineno: 0 macro: __UINT16_TYPE__ short unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __UINT32_TYPE__ unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __UINT64_TYPE__ long unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST8_TYPE__ signed char
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST16_TYPE__ short int
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST32_TYPE__ int
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST64_TYPE__ long int
DW_MACRO_define_strp - lineno: 0 macro: __UINT_LEAST8_TYPE__ unsigned char
DW_MACRO_define_strp - lineno: 0 macro: __UINT_LEAST16_TYPE__ short unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __UINT_LEAST32_TYPE__ unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __UINT_LEAST64_TYPE__ long unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST8_TYPE__ signed char
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST16_TYPE__ long int
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST32_TYPE__ long int
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST64_TYPE__ long int
DW_MACRO_define_strp - lineno: 0 macro: __UINT_FAST8_TYPE__ unsigned char
DW_MACRO_define_strp - lineno: 0 macro: __UINT_FAST16_TYPE__ long unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __UINT_FAST32_TYPE__ long unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __UINT_FAST64_TYPE__ long unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __INTPTR_TYPE__ long int
DW_MACRO_define_strp - lineno: 0 macro: __UINTPTR_TYPE__ long unsigned int
DW_MACRO_define_strp - lineno: 0 macro: __GXX_ABI_VERSION 1016
DW_MACRO_define_strp - lineno: 0 macro: __SCHAR_MAX__ 0x7f
DW_MACRO_define_strp - lineno: 0 macro: __SHRT_MAX__ 0x7fff
DW_MACRO_define_strp - lineno: 0 macro: __INT_MAX__ 0x7fffffff
DW_MACRO_define_strp - lineno: 0 macro: __LONG_MAX__ 0x7fffffffffffffffL
DW_MACRO_define_strp - lineno: 0 macro: __LONG_LONG_MAX__ 0x7fffffffffffffffLL
DW_MACRO_define_strp - lineno: 0 macro: __WCHAR_MAX__ 0x7fffffff
DW_MACRO_define_strp - lineno: 0 macro: __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
DW_MACRO_define_strp - lineno: 0 macro: __WINT_MAX__ 0xffffffffU
DW_MACRO_define_strp - lineno: 0 macro: __WINT_MIN__ 0U
DW_MACRO_define_strp - lineno: 0 macro: __PTRDIFF_MAX__ 0x7fffffffffffffffL
DW_MACRO_define_strp - lineno: 0 macro: __SIZE_MAX__ 0xffffffffffffffffUL
DW_MACRO_define_strp - lineno: 0 macro: __SCHAR_WIDTH__ 8
DW_MACRO_define_strp - lineno: 0 macro: __SHRT_WIDTH__ 16
DW_MACRO_define_strp - lineno: 0 macro: __INT_WIDTH__ 32
DW_MACRO_define_strp - lineno: 0 macro: __LONG_WIDTH__ 64
DW_MACRO_define_strp - lineno: 0 macro: __LONG_LONG_WIDTH__ 64
DW_MACRO_define_strp - lineno: 0 macro: __WCHAR_WIDTH__ 32
DW_MACRO_define_strp - lineno: 0 macro: __WINT_WIDTH__ 32
DW_MACRO_define_strp - lineno: 0 macro: __PTRDIFF_WIDTH__ 64
DW_MACRO_define_strp - lineno: 0 macro: __SIZE_WIDTH__ 64
DW_MACRO_define_strp - lineno: 0 macro: __INTMAX_MAX__ 0x7fffffffffffffffL
DW_MACRO_define_strp - lineno: 0 macro: __INTMAX_C(c) c ## L
DW_MACRO_define_strp - lineno: 0 macro: __UINTMAX_MAX__ 0xffffffffffffffffUL
DW_MACRO_define_strp - lineno: 0 macro: __UINTMAX_C(c) c ## UL
DW_MACRO_define_strp - lineno: 0 macro: __INTMAX_WIDTH__ 64
DW_MACRO_define_strp - lineno: 0 macro: __SIG_ATOMIC_MAX__ 0x7fffffff
DW_MACRO_define_strp - lineno: 0 macro: __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
DW_MACRO_define_strp - lineno: 0 macro: __SIG_ATOMIC_WIDTH__ 32
DW_MACRO_define_strp - lineno: 0 macro: __INT8_MAX__ 0x7f
DW_MACRO_define_strp - lineno: 0 macro: __INT16_MAX__ 0x7fff
DW_MACRO_define_strp - lineno: 0 macro: __INT32_MAX__ 0x7fffffff
DW_MACRO_define_strp - lineno: 0 macro: __INT64_MAX__ 0x7fffffffffffffffL
DW_MACRO_define_strp - lineno: 0 macro: __UINT8_MAX__ 0xff
DW_MACRO_define_strp - lineno: 0 macro: __UINT16_MAX__ 0xffff
DW_MACRO_define_strp - lineno: 0 macro: __UINT32_MAX__ 0xffffffffU
DW_MACRO_define_strp - lineno: 0 macro: __UINT64_MAX__ 0xffffffffffffffffUL
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST8_MAX__ 0x7f
DW_MACRO_define_strp - lineno: 0 macro: __INT8_C(c) c
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST8_WIDTH__ 8
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST16_MAX__ 0x7fff
DW_MACRO_define_strp - lineno: 0 macro: __INT16_C(c) c
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST16_WIDTH__ 16
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST32_MAX__ 0x7fffffff
DW_MACRO_define_strp - lineno: 0 macro: __INT32_C(c) c
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST32_WIDTH__ 32
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST64_MAX__ 0x7fffffffffffffffL
DW_MACRO_define_strp - lineno: 0 macro: __INT64_C(c) c ## L
DW_MACRO_define_strp - lineno: 0 macro: __INT_LEAST64_WIDTH__ 64
DW_MACRO_define_strp - lineno: 0 macro: __UINT_LEAST8_MAX__ 0xff
DW_MACRO_define_strp - lineno: 0 macro: __UINT8_C(c) c
DW_MACRO_define_strp - lineno: 0 macro: __UINT_LEAST16_MAX__ 0xffff
DW_MACRO_define_strp - lineno: 0 macro: __UINT16_C(c) c
DW_MACRO_define_strp - lineno: 0 macro: __UINT_LEAST32_MAX__ 0xffffffffU
DW_MACRO_define_strp - lineno: 0 macro: __UINT32_C(c) c ## U
DW_MACRO_define_strp - lineno: 0 macro: __UINT_LEAST64_MAX__ 0xffffffffffffffffUL
DW_MACRO_define_strp - lineno: 0 macro: __UINT64_C(c) c ## UL
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST8_MAX__ 0x7f
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST8_WIDTH__ 8
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST16_MAX__ 0x7fffffffffffffffL
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST16_WIDTH__ 64
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST32_MAX__ 0x7fffffffffffffffL
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST32_WIDTH__ 64
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST64_MAX__ 0x7fffffffffffffffL
DW_MACRO_define_strp - lineno: 0 macro: __INT_FAST64_WIDTH__ 64
DW_MACRO_define_strp - lineno: 0 macro: __UINT_FAST8_MAX__ 0xff
DW_MACRO_define_strp - lineno: 0 macro: __UINT_FAST16_MAX__ 0xffffffffffffffffUL
DW_MACRO_define_strp - lineno: 0 macro: __UINT_FAST32_MAX__ 0xffffffffffffffffUL
DW_MACRO_define_strp - lineno: 0 macro: __UINT_FAST64_MAX__ 0xffffffffffffffffUL
DW_MACRO_define_strp - lineno: 0 macro: __INTPTR_MAX__ 0x7fffffffffffffffL
DW_MACRO_define_strp - lineno: 0 macro: __INTPTR_WIDTH__ 64
DW_MACRO_define_strp - lineno: 0 macro: __UINTPTR_MAX__ 0xffffffffffffffffUL
DW_MACRO_define_strp - lineno: 0 macro: __GCC_IEC_559 2
DW_MACRO_define_strp - lineno: 0 macro: __GCC_IEC_559_COMPLEX 2
DW_MACRO_define_strp - lineno: 0 macro: __FLT_EVAL_METHOD__ 0
DW_MACRO_define_strp - lineno: 0 macro: __FLT_EVAL_METHOD_TS_18661_3__ 0
DW_MACRO_define_strp - lineno: 0 macro: __DEC_EVAL_METHOD__ 2
DW_MACRO_define_strp - lineno: 0 macro: __FLT_RADIX__ 2
DW_MACRO_define_strp - lineno: 0 macro: __FLT_MANT_DIG__ 24
DW_MACRO_define_strp - lineno: 0 macro: __FLT_DIG__ 6
DW_MACRO_define_strp - lineno: 0 macro: __FLT_MIN_EXP__ (-125)
DW_MACRO_define_strp - lineno: 0 macro: __FLT_MIN_10_EXP__ (-37)
DW_MACRO_define_strp - lineno: 0 macro: __FLT_MAX_EXP__ 128
DW_MACRO_define_strp - lineno: 0 macro: __FLT_MAX_10_EXP__ 38
DW_MACRO_define_strp - lineno: 0 macro: __FLT_DECIMAL_DIG__ 9
DW_MACRO_define_strp - lineno: 0 macro: __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
DW_MACRO_define_strp - lineno: 0 macro: __FLT_NORM_MAX__ 3.40282346638528859811704183484516925e+38F
DW_MACRO_define_strp - lineno: 0 macro: __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
DW_MACRO_define_strp - lineno: 0 macro: __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
DW_MACRO_define_strp - lineno: 0 macro: __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
DW_MACRO_define_strp - lineno: 0 macro: __FLT_HAS_DENORM__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT_HAS_INFINITY__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT_HAS_QUIET_NAN__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT_IS_IEC_60559__ 2
DW_MACRO_define_strp - lineno: 0 macro: __DBL_MANT_DIG__ 53
DW_MACRO_define_strp - lineno: 0 macro: __DBL_DIG__ 15
DW_MACRO_define_strp - lineno: 0 macro: __DBL_MIN_EXP__ (-1021)
DW_MACRO_define_strp - lineno: 0 macro: __DBL_MIN_10_EXP__ (-307)
DW_MACRO_define_strp - lineno: 0 macro: __DBL_MAX_EXP__ 1024
DW_MACRO_define_strp - lineno: 0 macro: __DBL_MAX_10_EXP__ 308
DW_MACRO_define_strp - lineno: 0 macro: __DBL_DECIMAL_DIG__ 17
DW_MACRO_define_strp - lineno: 0 macro: __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
DW_MACRO_define_strp - lineno: 0 macro: __DBL_NORM_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
DW_MACRO_define_strp - lineno: 0 macro: __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)
DW_MACRO_define_strp - lineno: 0 macro: __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)
DW_MACRO_define_strp - lineno: 0 macro: __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)
DW_MACRO_define_strp - lineno: 0 macro: __DBL_HAS_DENORM__ 1
DW_MACRO_define_strp - lineno: 0 macro: __DBL_HAS_INFINITY__ 1
DW_MACRO_define_strp - lineno: 0 macro: __DBL_HAS_QUIET_NAN__ 1
DW_MACRO_define_strp - lineno: 0 macro: __DBL_IS_IEC_60559__ 2
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_MANT_DIG__ 64
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_DIG__ 18
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_MIN_EXP__ (-16381)
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_MIN_10_EXP__ (-4931)
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_MAX_EXP__ 16384
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_MAX_10_EXP__ 4932
DW_MACRO_define_strp - lineno: 0 macro: __DECIMAL_DIG__ 21
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_DECIMAL_DIG__ 21
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_NORM_MAX__ 1.18973149535723176502126385303097021e+4932L
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_HAS_DENORM__ 1
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_HAS_INFINITY__ 1
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_HAS_QUIET_NAN__ 1
DW_MACRO_define_strp - lineno: 0 macro: __LDBL_IS_IEC_60559__ 2
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_MANT_DIG__ 24
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_DIG__ 6
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_MIN_EXP__ (-125)
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_MIN_10_EXP__ (-37)
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_MAX_EXP__ 128
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_MAX_10_EXP__ 38
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_DECIMAL_DIG__ 9
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_NORM_MAX__ 3.40282346638528859811704183484516925e+38F32
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_HAS_DENORM__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_HAS_INFINITY__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_HAS_QUIET_NAN__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT32_IS_IEC_60559__ 2
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_MANT_DIG__ 53
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_DIG__ 15
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_MIN_EXP__ (-1021)
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_MIN_10_EXP__ (-307)
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_MAX_EXP__ 1024
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_MAX_10_EXP__ 308
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_DECIMAL_DIG__ 17
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_NORM_MAX__ 1.79769313486231570814527423731704357e+308F64
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_HAS_DENORM__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_HAS_INFINITY__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_HAS_QUIET_NAN__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT64_IS_IEC_60559__ 2
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_MANT_DIG__ 113
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_DIG__ 33
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_MIN_EXP__ (-16381)
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_MIN_10_EXP__ (-4931)
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_MAX_EXP__ 16384
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_MAX_10_EXP__ 4932
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_DECIMAL_DIG__ 36
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_NORM_MAX__ 1.18973149535723176508575932662800702e+4932F128
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_HAS_DENORM__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_HAS_INFINITY__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_HAS_QUIET_NAN__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT128_IS_IEC_60559__ 2
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_MANT_DIG__ 53
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_DIG__ 15
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_MIN_EXP__ (-1021)
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_MIN_10_EXP__ (-307)
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_MAX_EXP__ 1024
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_MAX_10_EXP__ 308
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_DECIMAL_DIG__ 17
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_NORM_MAX__ 1.79769313486231570814527423731704357e+308F32x
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_HAS_DENORM__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_HAS_INFINITY__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_HAS_QUIET_NAN__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT32X_IS_IEC_60559__ 2
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_MANT_DIG__ 64
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_DIG__ 18
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_MIN_EXP__ (-16381)
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_MIN_10_EXP__ (-4931)
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_MAX_EXP__ 16384
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_MAX_10_EXP__ 4932
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_DECIMAL_DIG__ 21
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_NORM_MAX__ 1.18973149535723176502126385303097021e+4932F64x
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_HAS_DENORM__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_HAS_INFINITY__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_HAS_QUIET_NAN__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FLT64X_IS_IEC_60559__ 2
DW_MACRO_define_strp - lineno: 0 macro: __DEC32_MANT_DIG__ 7
DW_MACRO_define_strp - lineno: 0 macro: __DEC32_MIN_EXP__ (-94)
DW_MACRO_define_strp - lineno: 0 macro: __DEC32_MAX_EXP__ 97
DW_MACRO_define_strp - lineno: 0 macro: __DEC32_MIN__ 1E-95DF
DW_MACRO_define_strp - lineno: 0 macro: __DEC32_MAX__ 9.999999E96DF
DW_MACRO_define_strp - lineno: 0 macro: __DEC32_EPSILON__ 1E-6DF
DW_MACRO_define_strp - lineno: 0 macro: __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
DW_MACRO_define_strp - lineno: 0 macro: __DEC64_MANT_DIG__ 16
DW_MACRO_define_strp - lineno: 0 macro: __DEC64_MIN_EXP__ (-382)
DW_MACRO_define_strp - lineno: 0 macro: __DEC64_MAX_EXP__ 385
DW_MACRO_define_strp - lineno: 0 macro: __DEC64_MIN__ 1E-383DD
DW_MACRO_define_strp - lineno: 0 macro: __DEC64_MAX__ 9.999999999999999E384DD
DW_MACRO_define_strp - lineno: 0 macro: __DEC64_EPSILON__ 1E-15DD
DW_MACRO_define_strp - lineno: 0 macro: __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
DW_MACRO_define_strp - lineno: 0 macro: __DEC128_MANT_DIG__ 34
DW_MACRO_define_strp - lineno: 0 macro: __DEC128_MIN_EXP__ (-6142)
DW_MACRO_define_strp - lineno: 0 macro: __DEC128_MAX_EXP__ 6145
DW_MACRO_define_strp - lineno: 0 macro: __DEC128_MIN__ 1E-6143DL
DW_MACRO_define_strp - lineno: 0 macro: __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
DW_MACRO_define_strp - lineno: 0 macro: __DEC128_EPSILON__ 1E-33DL
DW_MACRO_define_strp - lineno: 0 macro: __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
DW_MACRO_define_strp - lineno: 0 macro: __REGISTER_PREFIX__ 
DW_MACRO_define_strp - lineno: 0 macro: __USER_LABEL_PREFIX__ 
DW_MACRO_define_strp - lineno: 0 macro: __GNUC_STDC_INLINE__ 1
DW_MACRO_define_strp - lineno: 0 macro: __NO_INLINE__ 1
DW_MACRO_define_strp - lineno: 0 macro: __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
DW_MACRO_define_strp - lineno: 0 macro: __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
DW_MACRO_define_strp - lineno: 0 macro: __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
DW_MACRO_define_strp - lineno: 0 macro: __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ATOMIC_BOOL_LOCK_FREE 2
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ATOMIC_CHAR_LOCK_FREE 2
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ATOMIC_SHORT_LOCK_FREE 2
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ATOMIC_INT_LOCK_FREE 2
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ATOMIC_LONG_LOCK_FREE 2
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ATOMIC_LLONG_LOCK_FREE 2
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ATOMIC_POINTER_LOCK_FREE 2
DW_MACRO_define_strp - lineno: 0 macro: __HAVE_SPECULATION_SAFE_VALUE 1
DW_MACRO_define_strp - lineno: 0 macro: __GCC_HAVE_DWARF2_CFI_ASM 1
DW_MACRO_define_strp - lineno: 0 macro: __PRAGMA_REDEFINE_EXTNAME 1
DW_MACRO_define_strp - lineno: 0 macro: __SSP_STRONG__ 3
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_INT128__ 16
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_WCHAR_T__ 4
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_WINT_T__ 4
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_PTRDIFF_T__ 8
DW_MACRO_define_strp - lineno: 0 macro: __amd64 1
DW_MACRO_define_strp - lineno: 0 macro: __amd64__ 1
DW_MACRO_define_strp - lineno: 0 macro: __x86_64 1
DW_MACRO_define_strp - lineno: 0 macro: __x86_64__ 1
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_FLOAT80__ 16
DW_MACRO_define_strp - lineno: 0 macro: __SIZEOF_FLOAT128__ 16
DW_MACRO_define_strp - lineno: 0 macro: __ATOMIC_HLE_ACQUIRE 65536
DW_MACRO_define_strp - lineno: 0 macro: __ATOMIC_HLE_RELEASE 131072
DW_MACRO_define_strp - lineno: 0 macro: __GCC_ASM_FLAG_OUTPUTS__ 1
DW_MACRO_define_strp - lineno: 0 macro: __k8 1
DW_MACRO_define_strp - lineno: 0 macro: __k8__ 1
DW_MACRO_define_strp - lineno: 0 macro: __code_model_small__ 1
DW_MACRO_define_strp - lineno: 0 macro: __MMX__ 1
DW_MACRO_define_strp - lineno: 0 macro: __SSE__ 1
DW_MACRO_define_strp - lineno: 0 macro: __SSE2__ 1
DW_MACRO_define_strp - lineno: 0 macro: __FXSR__ 1
DW_MACRO_define_strp - lineno: 0 macro: __SSE_MATH__ 1
DW_MACRO_define_strp - lineno: 0 macro: __SSE2_MATH__ 1
DW_MACRO_define_strp - lineno: 0 macro: __MMX_WITH_SSE__ 1
DW_MACRO_define_strp - lineno: 0 macro: __SEG_FS 1
DW_MACRO_define_strp - lineno: 0 macro: __SEG_GS 1
DW_MACRO_define_strp - lineno: 0 macro: __CET__ 3
DW_MACRO_define_strp - lineno: 0 macro: __gnu_linux__ 1
DW_MACRO_define_strp - lineno: 0 macro: __linux 1
DW_MACRO_define_strp - lineno: 0 macro: __linux__ 1
DW_MACRO_define_strp - lineno: 0 macro: linux 1
DW_MACRO_define_strp - lineno: 0 macro: __unix 1
DW_MACRO_define_strp - lineno: 0 macro: __unix__ 1
DW_MACRO_define_strp - lineno: 0 macro: unix 1
DW_MACRO_define_strp - lineno: 0 macro: __ELF__ 1
DW_MACRO_define_strp - lineno: 0 macro: __DECIMAL_BID_FORMAT__ 1

0x00000a51:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 19 macro: _STDC_PREDEF_H 1
DW_MACRO_define_strp - lineno: 38 macro: __STDC_IEC_559__ 1
DW_MACRO_define_strp - lineno: 39 macro: __STDC_IEC_60559_BFP__ 201404L
DW_MACRO_define_strp - lineno: 48 macro: __STDC_IEC_559_COMPLEX__ 1
DW_MACRO_define_strp - lineno: 49 macro: __STDC_IEC_60559_COMPLEX__ 201404L
DW_MACRO_define_strp - lineno: 62 macro: __STDC_ISO_10646__ 201706L

0x00000a79:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 19 macro: _FEATURES_H 1
DW_MACRO_undef_strp - lineno: 126 macro: __USE_ISOC11
DW_MACRO_undef_strp - lineno: 127 macro: __USE_ISOC99
DW_MACRO_undef_strp - lineno: 128 macro: __USE_ISOC95
DW_MACRO_undef_strp - lineno: 129 macro: __USE_ISOCXX11
DW_MACRO_undef_strp - lineno: 130 macro: __USE_POSIX
DW_MACRO_undef_strp - lineno: 131 macro: __USE_POSIX2
DW_MACRO_undef_strp - lineno: 132 macro: __USE_POSIX199309
DW_MACRO_undef_strp - lineno: 133 macro: __USE_POSIX199506
DW_MACRO_undef_strp - lineno: 134 macro: __USE_XOPEN
DW_MACRO_undef_strp - lineno: 135 macro: __USE_XOPEN_EXTENDED
DW_MACRO_undef_strp - lineno: 136 macro: __USE_UNIX98
DW_MACRO_undef_strp - lineno: 137 macro: __USE_XOPEN2K
DW_MACRO_undef_strp - lineno: 138 macro: __USE_XOPEN2KXSI
DW_MACRO_undef_strp - lineno: 139 macro: __USE_XOPEN2K8
DW_MACRO_undef_strp - lineno: 140 macro: __USE_XOPEN2K8XSI
DW_MACRO_undef_strp - lineno: 141 macro: __USE_LARGEFILE
DW_MACRO_undef_strp - lineno: 142 macro: __USE_LARGEFILE64
DW_MACRO_undef_strp - lineno: 143 macro: __USE_FILE_OFFSET64
DW_MACRO_undef_strp - lineno: 144 macro: __USE_MISC
DW_MACRO_undef_strp - lineno: 145 macro: __USE_ATFILE
DW_MACRO_undef_strp - lineno: 146 macro: __USE_DYNAMIC_STACK_SIZE
DW_MACRO_undef_strp - lineno: 147 macro: __USE_GNU
DW_MACRO_undef_strp - lineno: 148 macro: __USE_FORTIFY_LEVEL
DW_MACRO_undef_strp - lineno: 149 macro: __KERNEL_STRICT_NAMES
DW_MACRO_undef_strp - lineno: 150 macro: __GLIBC_USE_ISOC2X
DW_MACRO_undef_strp - lineno: 151 macro: __GLIBC_USE_DEPRECATED_GETS
DW_MACRO_undef_strp - lineno: 152 macro: __GLIBC_USE_DEPRECATED_SCANF
DW_MACRO_define_strp - lineno: 157 macro: __KERNEL_STRICT_NAMES 
DW_MACRO_define_strp - lineno: 168 macro: __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
DW_MACRO_define_strp - lineno: 182 macro: __glibc_clang_prereq(maj,min) 0
DW_MACRO_define_strp - lineno: 186 macro: __GLIBC_USE(F) __GLIBC_USE_ ## F
DW_MACRO_undef_strp - lineno: 235 macro: _DEFAULT_SOURCE
DW_MACRO_define_strp - lineno: 236 macro: _DEFAULT_SOURCE 1
DW_MACRO_define_strp - lineno: 244 macro: __GLIBC_USE_ISOC2X 0
DW_MACRO_define_strp - lineno: 250 macro: __USE_ISOC11 1
DW_MACRO_define_strp - lineno: 257 macro: __USE_ISOC99 1
DW_MACRO_define_strp - lineno: 264 macro: __USE_ISOC95 1
DW_MACRO_define_strp - lineno: 285 macro: __USE_POSIX_IMPLICITLY 1
DW_MACRO_undef_strp - lineno: 287 macro: _POSIX_SOURCE
DW_MACRO_define_strp - lineno: 288 macro: _POSIX_SOURCE 1
DW_MACRO_undef_strp - lineno: 289 macro: _POSIX_C_SOURCE
DW_MACRO_define_strp - lineno: 290 macro: _POSIX_C_SOURCE 200809L
DW_MACRO_define_strp - lineno: 325 macro: __USE_POSIX 1
DW_MACRO_define_strp - lineno: 329 macro: __USE_POSIX2 1
DW_MACRO_define_strp - lineno: 333 macro: __USE_POSIX199309 1
DW_MACRO_define_strp - lineno: 337 macro: __USE_POSIX199506 1
DW_MACRO_define_strp - lineno: 341 macro: __USE_XOPEN2K 1
DW_MACRO_undef_strp - lineno: 342 macro: __USE_ISOC95
DW_MACRO_define_strp - lineno: 343 macro: __USE_ISOC95 1
DW_MACRO_undef_strp - lineno: 344 macro: __USE_ISOC99
DW_MACRO_define_strp - lineno: 345 macro: __USE_ISOC99 1
DW_MACRO_define_strp - lineno: 349 macro: __USE_XOPEN2K8 1
DW_MACRO_undef_strp - lineno: 350 macro: _ATFILE_SOURCE
DW_MACRO_define_strp - lineno: 351 macro: _ATFILE_SOURCE 1

0x00000bfb:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 4 macro: __WORDSIZE 64
DW_MACRO_define_strp - lineno: 12 macro: __WORDSIZE_TIME64_COMPAT32 1
DW_MACRO_define_strp - lineno: 14 macro: __SYSCALL_WORDSIZE 64

0x00000c11:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 395 macro: __USE_MISC 1
DW_MACRO_define_strp - lineno: 399 macro: __USE_ATFILE 1
DW_MACRO_define_strp - lineno: 428 macro: __USE_FORTIFY_LEVEL 0
DW_MACRO_define_strp - lineno: 436 macro: __GLIBC_USE_DEPRECATED_GETS 0
DW_MACRO_define_strp - lineno: 459 macro: __GLIBC_USE_DEPRECATED_SCANF 0
DW_MACRO_undef_strp - lineno: 472 macro: __GNU_LIBRARY__
DW_MACRO_define_strp - lineno: 473 macro: __GNU_LIBRARY__ 6
DW_MACRO_define_strp - lineno: 477 macro: __GLIBC__ 2
DW_MACRO_define_strp - lineno: 478 macro: __GLIBC_MINOR__ 35
DW_MACRO_define_strp - lineno: 480 macro: __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))

0x00000c5b:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 20 macro: _SYS_CDEFS_H 1
DW_MACRO_undef - lineno: 35 macro: __P
DW_MACRO_undef_strp - lineno: 36 macro: __PMT
DW_MACRO_define_strp - lineno: 45 macro: __glibc_has_attribute(attr) __has_attribute (attr)
DW_MACRO_define_strp - lineno: 50 macro: __glibc_has_builtin(name) __has_builtin (name)
DW_MACRO_define_strp - lineno: 57 macro: __glibc_has_extension(ext) 0
DW_MACRO_define_strp - lineno: 65 macro: __LEAF , __leaf__
DW_MACRO_define_strp - lineno: 66 macro: __LEAF_ATTR __attribute__ ((__leaf__))
DW_MACRO_define_strp - lineno: 79 macro: __THROW __attribute__ ((__nothrow__ __LEAF))
DW_MACRO_define_strp - lineno: 80 macro: __THROWNL __attribute__ ((__nothrow__))
DW_MACRO_define_strp - lineno: 81 macro: __NTH(fct) __attribute__ ((__nothrow__ __LEAF)) fct
DW_MACRO_define_strp - lineno: 82 macro: __NTHNL(fct) __attribute__ ((__nothrow__)) fct
DW_MACRO_define_strp - lineno: 118 macro: __P(args) args
DW_MACRO_define_strp - lineno: 119 macro: __PMT(args) args
DW_MACRO_define_strp - lineno: 124 macro: __CONCAT(x,y) x ## y
DW_MACRO_define_strp - lineno: 125 macro: __STRING(x) #x
DW_MACRO_define_strp - lineno: 128 macro: __ptr_t void *
DW_MACRO_define_strp - lineno: 136 macro: __BEGIN_DECLS 
DW_MACRO_define_strp - lineno: 137 macro: __END_DECLS 
DW_MACRO_define_strp - lineno: 142 macro: __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)
DW_MACRO_define_strp - lineno: 143 macro: __bos0(ptr) __builtin_object_size (ptr, 0)
DW_MACRO_define_strp - lineno: 151 macro: __glibc_objsize0(__o) __bos0 (__o)
DW_MACRO_define_strp - lineno: 152 macro: __glibc_objsize(__o) __bos (__o)
DW_MACRO_define_strp - lineno: 159 macro: __glibc_safe_len_cond(__l,__s,__osz) ((__l) <= (__osz) / (__s))
DW_MACRO_define_strp - lineno: 160 macro: __glibc_unsigned_or_positive(__l) ((__typeof (__l)) 0 < (__typeof (__l)) -1 || (__builtin_constant_p (__l) && (__l) > 0))
DW_MACRO_define_strp - lineno: 167 macro: __glibc_safe_or_unknown_len(__l,__s,__osz) (__glibc_unsigned_or_positive (__l) && __builtin_constant_p (__glibc_safe_len_cond ((__SIZE_TYPE__) (__l), __s, __osz)) && __glibc_safe_len_cond ((__SIZE_TYPE__) (__l), __s, __osz))
DW_MACRO_define_strp - lineno: 176 macro: __glibc_unsafe_len(__l,__s,__osz) (__glibc_unsigned_or_positive (__l) && __builtin_constant_p (__glibc_safe_len_cond ((__SIZE_TYPE__) (__l), __s, __osz)) && !__glibc_safe_len_cond ((__SIZE_TYPE__) (__l), __s, __osz))
DW_MACRO_define_strp - lineno: 185 macro: __glibc_fortify(f,__l,__s,__osz,...) (__glibc_safe_or_unknown_len (__l, __s, __osz) ? __ ## f ## _alias (__VA_ARGS__) : (__glibc_unsafe_len (__l, __s, __osz) ? __ ## f ## _chk_warn (__VA_ARGS__, __osz) : __ ## f ## _chk (__VA_ARGS__, __osz)))
DW_MACRO_define_strp - lineno: 195 macro: __glibc_fortify_n(f,__l,__s,__osz,...) (__glibc_safe_or_unknown_len (__l, __s, __osz) ? __ ## f ## _alias (__VA_ARGS__) : (__glibc_unsafe_len (__l, __s, __osz) ? __ ## f ## _chk_warn (__VA_ARGS__, (__osz) / (__s)) : __ ## f ## _chk (__VA_ARGS__, (__osz) / (__s))))
DW_MACRO_define_strp - lineno: 203 macro: __warnattr(msg) __attribute__((__warning__ (msg)))
DW_MACRO_define_strp - lineno: 204 macro: __errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))
DW_MACRO_define_strp - lineno: 216 macro: __flexarr []
DW_MACRO_define_strp - lineno: 217 macro: __glibc_c99_flexarr_available 1
DW_MACRO_define_strp - lineno: 247 macro: __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))
DW_MACRO_define_strp - lineno: 254 macro: __REDIRECT_NTH(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROW
DW_MACRO_define_strp - lineno: 256 macro: __REDIRECT_NTHNL(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROWNL
DW_MACRO_define_strp - lineno: 259 macro: __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)
DW_MACRO_define_strp - lineno: 260 macro: __ASMNAME2(prefix,cname) __STRING (prefix) cname
DW_MACRO_define_strp - lineno: 281 macro: __attribute_malloc__ __attribute__ ((__malloc__))
DW_MACRO_define_strp - lineno: 289 macro: __attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))
DW_MACRO_define_strp - lineno: 298 macro: __attribute_alloc_align__(param) __attribute__ ((__alloc_align__ param))
DW_MACRO_define_strp - lineno: 308 macro: __attribute_pure__ __attribute__ ((__pure__))
DW_MACRO_define_strp - lineno: 315 macro: __attribute_const__ __attribute__ ((__const__))
DW_MACRO_define_strp - lineno: 321 macro: __attribute_maybe_unused__ __attribute__ ((__unused__))
DW_MACRO_define_strp - lineno: 330 macro: __attribute_used__ __attribute__ ((__used__))
DW_MACRO_define_strp - lineno: 331 macro: __attribute_noinline__ __attribute__ ((__noinline__))
DW_MACRO_define_strp - lineno: 339 macro: __attribute_deprecated__ __attribute__ ((__deprecated__))
DW_MACRO_define_strp - lineno: 349 macro: __attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))
DW_MACRO_define_strp - lineno: 362 macro: __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))
DW_MACRO_define_strp - lineno: 372 macro: __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))
DW_MACRO_define_strp - lineno: 384 macro: __attribute_nonnull__(params) __attribute__ ((__nonnull__ params))
DW_MACRO_define_strp - lineno: 390 macro: __nonnull(params) __attribute_nonnull__ (params)
DW_MACRO_define_strp - lineno: 397 macro: __returns_nonnull __attribute__ ((__returns_nonnull__))
DW_MACRO_define_strp - lineno: 406 macro: __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))
DW_MACRO_define_strp - lineno: 415 macro: __wur 
DW_MACRO_undef_strp - lineno: 423 macro: __always_inline
DW_MACRO_define_strp - lineno: 424 macro: __always_inline __inline __attribute__ ((__always_inline__))
DW_MACRO_define_strp - lineno: 433 macro: __attribute_artificial__ __attribute__ ((__artificial__))
DW_MACRO_define_strp - lineno: 451 macro: __extern_inline extern __inline __attribute__ ((__gnu_inline__))
DW_MACRO_define_strp - lineno: 452 macro: __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))
DW_MACRO_define_strp - lineno: 461 macro: __fortify_function __extern_always_inline __attribute_artificial__
DW_MACRO_define_strp - lineno: 467 macro: __va_arg_pack() __builtin_va_arg_pack ()
DW_MACRO_define_strp - lineno: 468 macro: __va_arg_pack_len() __builtin_va_arg_pack_len ()
DW_MACRO_define_strp - lineno: 495 macro: __restrict_arr __restrict
DW_MACRO_define_strp - lineno: 510 macro: __glibc_unlikely(cond) __builtin_expect ((cond), 0)
DW_MACRO_define_strp - lineno: 511 macro: __glibc_likely(cond) __builtin_expect ((cond), 1)
DW_MACRO_define_strp - lineno: 532 macro: __attribute_nonstring__ __attribute__ ((__nonstring__))
DW_MACRO_undef_strp - lineno: 538 macro: __attribute_copy__
DW_MACRO_define_strp - lineno: 542 macro: __attribute_copy__(arg) __attribute__ ((__copy__ (arg)))

0x00000e32:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 616 macro: __LDBL_REDIR1(name,proto,alias) name proto
DW_MACRO_define_strp - lineno: 617 macro: __LDBL_REDIR(name,proto) name proto
DW_MACRO_define_strp - lineno: 618 macro: __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW
DW_MACRO_define_strp - lineno: 619 macro: __LDBL_REDIR_NTH(name,proto) name proto __THROW
DW_MACRO_define_strp - lineno: 620 macro: __LDBL_REDIR2_DECL(name) 
DW_MACRO_define_strp - lineno: 621 macro: __LDBL_REDIR_DECL(name) 
DW_MACRO_define_strp - lineno: 623 macro: __REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)
DW_MACRO_define_strp - lineno: 624 macro: __REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)
DW_MACRO_define_strp - lineno: 635 macro: __glibc_macro_warning1(message) _Pragma (#message)
DW_MACRO_define_strp - lineno: 636 macro: __glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)
DW_MACRO_define_strp - lineno: 654 macro: __HAVE_GENERIC_SELECTION 1
DW_MACRO_define_strp - lineno: 665 macro: __attr_access(x) __attribute__ ((__access__ x))
DW_MACRO_define_strp - lineno: 673 macro: __fortified_attr_access(a,o,s) __attr_access ((a, o, s))
DW_MACRO_define_strp - lineno: 676 macro: __attr_access_none(argno) __attribute__ ((__access__ (__none__, argno)))
DW_MACRO_define_strp - lineno: 689 macro: __attr_dealloc(dealloc,argno) __attribute__ ((__malloc__ (dealloc, argno)))
DW_MACRO_define_strp - lineno: 691 macro: __attr_dealloc_free __attr_dealloc (__builtin_free, 1)
DW_MACRO_define_strp - lineno: 700 macro: __attribute_returns_twice__ __attribute__ ((__returns_twice__))

0x00000ead:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 10 macro: __stub___compat_bdflush 
DW_MACRO_define_strp - lineno: 11 macro: __stub_chflags 
DW_MACRO_define_strp - lineno: 12 macro: __stub_fchflags 
DW_MACRO_define_strp - lineno: 13 macro: __stub_gtty 
DW_MACRO_define_strp - lineno: 14 macro: __stub_revoke 
DW_MACRO_define_strp - lineno: 15 macro: __stub_setlogin 
DW_MACRO_define_strp - lineno: 16 macro: __stub_sigreturn 
DW_MACRO_define_strp - lineno: 17 macro: __stub_stty 

0x00000ee1:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 109 macro: __S16_TYPE short int
DW_MACRO_define_strp - lineno: 110 macro: __U16_TYPE unsigned short int
DW_MACRO_define_strp - lineno: 111 macro: __S32_TYPE int
DW_MACRO_define_strp - lineno: 112 macro: __U32_TYPE unsigned int
DW_MACRO_define_strp - lineno: 113 macro: __SLONGWORD_TYPE long int
DW_MACRO_define_strp - lineno: 114 macro: __ULONGWORD_TYPE unsigned long int
DW_MACRO_define_strp - lineno: 128 macro: __SQUAD_TYPE long int
DW_MACRO_define_strp - lineno: 129 macro: __UQUAD_TYPE unsigned long int
DW_MACRO_define_strp - lineno: 130 macro: __SWORD_TYPE long int
DW_MACRO_define_strp - lineno: 131 macro: __UWORD_TYPE unsigned long int
DW_MACRO_define_strp - lineno: 132 macro: __SLONG32_TYPE int
DW_MACRO_define_strp - lineno: 133 macro: __ULONG32_TYPE unsigned int
DW_MACRO_define_strp - lineno: 134 macro: __S64_TYPE long int
DW_MACRO_define_strp - lineno: 135 macro: __U64_TYPE unsigned long int
DW_MACRO_define_strp - lineno: 137 macro: __STD_TYPE typedef

0x00000f48:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 24 macro: _BITS_TYPESIZES_H 1
DW_MACRO_define_strp - lineno: 34 macro: __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE
DW_MACRO_define_strp - lineno: 35 macro: __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE
DW_MACRO_define_strp - lineno: 38 macro: __DEV_T_TYPE __UQUAD_TYPE
DW_MACRO_define_strp - lineno: 39 macro: __UID_T_TYPE __U32_TYPE
DW_MACRO_define_strp - lineno: 40 macro: __GID_T_TYPE __U32_TYPE
DW_MACRO_define_strp - lineno: 41 macro: __INO_T_TYPE __SYSCALL_ULONG_TYPE
DW_MACRO_define_strp - lineno: 42 macro: __INO64_T_TYPE __UQUAD_TYPE
DW_MACRO_define_strp - lineno: 43 macro: __MODE_T_TYPE __U32_TYPE
DW_MACRO_define_strp - lineno: 45 macro: __NLINK_T_TYPE __SYSCALL_ULONG_TYPE
DW_MACRO_define_strp - lineno: 46 macro: __FSWORD_T_TYPE __SYSCALL_SLONG_TYPE
DW_MACRO_define_strp - lineno: 51 macro: __OFF_T_TYPE __SYSCALL_SLONG_TYPE
DW_MACRO_define_strp - lineno: 52 macro: __OFF64_T_TYPE __SQUAD_TYPE
DW_MACRO_define_strp - lineno: 53 macro: __PID_T_TYPE __S32_TYPE
DW_MACRO_define_strp - lineno: 54 macro: __RLIM_T_TYPE __SYSCALL_ULONG_TYPE
DW_MACRO_define_strp - lineno: 55 macro: __RLIM64_T_TYPE __UQUAD_TYPE
DW_MACRO_define_strp - lineno: 56 macro: __BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE
DW_MACRO_define_strp - lineno: 57 macro: __BLKCNT64_T_TYPE __SQUAD_TYPE
DW_MACRO_define_strp - lineno: 58 macro: __FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE
DW_MACRO_define_strp - lineno: 59 macro: __FSBLKCNT64_T_TYPE __UQUAD_TYPE
DW_MACRO_define_strp - lineno: 60 macro: __FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE
DW_MACRO_define_strp - lineno: 61 macro: __FSFILCNT64_T_TYPE __UQUAD_TYPE
DW_MACRO_define_strp - lineno: 62 macro: __ID_T_TYPE __U32_TYPE
DW_MACRO_define_strp - lineno: 63 macro: __CLOCK_T_TYPE __SYSCALL_SLONG_TYPE
DW_MACRO_define_strp - lineno: 64 macro: __TIME_T_TYPE __SYSCALL_SLONG_TYPE
DW_MACRO_define_strp - lineno: 65 macro: __USECONDS_T_TYPE __U32_TYPE
DW_MACRO_define_strp - lineno: 66 macro: __SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE
DW_MACRO_define_strp - lineno: 67 macro: __SUSECONDS64_T_TYPE __SQUAD_TYPE
DW_MACRO_define_strp - lineno: 68 macro: __DADDR_T_TYPE __S32_TYPE
DW_MACRO_define_strp - lineno: 69 macro: __KEY_T_TYPE __S32_TYPE
DW_MACRO_define_strp - lineno: 70 macro: __CLOCKID_T_TYPE __S32_TYPE
DW_MACRO_define_strp - lineno: 71 macro: __TIMER_T_TYPE void *
DW_MACRO_define_strp - lineno: 72 macro: __BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE
DW_MACRO_define_strp - lineno: 73 macro: __FSID_T_TYPE struct { int __val[2]; }
DW_MACRO_define_strp - lineno: 74 macro: __SSIZE_T_TYPE __SWORD_TYPE
DW_MACRO_define_strp - lineno: 75 macro: __CPU_MASK_TYPE __SYSCALL_ULONG_TYPE
DW_MACRO_define_strp - lineno: 81 macro: __OFF_T_MATCHES_OFF64_T 1
DW_MACRO_define_strp - lineno: 84 macro: __INO_T_MATCHES_INO64_T 1
DW_MACRO_define_strp - lineno: 87 macro: __RLIM_T_MATCHES_RLIM64_T 1
DW_MACRO_define_strp - lineno: 90 macro: __STATFS_MATCHES_STATFS64 1
DW_MACRO_define_strp - lineno: 93 macro: __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 1
DW_MACRO_define_strp - lineno: 103 macro: __FD_SETSIZE 1024

0x00001048:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 24 macro: _BITS_TIME64_H 1
DW_MACRO_define_strp - lineno: 30 macro: __TIME64_T_TYPE __TIME_T_TYPE

0x00001058:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 25 macro: __FD_ZERO(s) do { unsigned int __i; fd_set *__arr = (s); for (__i = 0; __i < sizeof (fd_set) / sizeof (__fd_mask); ++__i) __FDS_BITS (__arr)[__i] = 0; } while (0)
DW_MACRO_define_strp - lineno: 32 macro: __FD_SET(d,s) ((void) (__FDS_BITS (s)[__FD_ELT(d)] |= __FD_MASK(d)))
DW_MACRO_define_strp - lineno: 34 macro: __FD_CLR(d,s) ((void) (__FDS_BITS (s)[__FD_ELT(d)] &= ~__FD_MASK(d)))
DW_MACRO_define_strp - lineno: 36 macro: __FD_ISSET(d,s) ((__FDS_BITS (s)[__FD_ELT (d)] & __FD_MASK (d)) != 0)

0x00001074:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 2 macro: ____sigset_t_defined 
DW_MACRO_define_strp - lineno: 4 macro: _SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))

0x00001084:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 20 macro: _BITS_ENDIAN_H 1
DW_MACRO_define_strp - lineno: 30 macro: __LITTLE_ENDIAN 1234
DW_MACRO_define_strp - lineno: 31 macro: __BIG_ENDIAN 4321
DW_MACRO_define_strp - lineno: 32 macro: __PDP_ENDIAN 3412

0x000010a0:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 2 macro: _BITS_ENDIANNESS_H 1
DW_MACRO_define_strp - lineno: 9 macro: __BYTE_ORDER __LITTLE_ENDIAN

0x000010b0:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 40 macro: __FLOAT_WORD_ORDER __BYTE_ORDER
DW_MACRO_define_strp - lineno: 44 macro: __LONG_LONG_PAIR(HI,LO) LO, HI

0x000010c0:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_undef_strp - lineno: 52 macro: __NFDBITS
DW_MACRO_define_strp - lineno: 54 macro: __NFDBITS (8 * (int) sizeof (__fd_mask))
DW_MACRO_define_strp - lineno: 55 macro: __FD_ELT(d) ((d) / __NFDBITS)
DW_MACRO_define_strp - lineno: 56 macro: __FD_MASK(d) ((__fd_mask) (1UL << ((d) % __NFDBITS)))
DW_MACRO_define_strp - lineno: 68 macro: __FDS_BITS(set) ((set)->__fds_bits)
DW_MACRO_define_strp - lineno: 73 macro: FD_SETSIZE __FD_SETSIZE
DW_MACRO_define_strp - lineno: 80 macro: NFDBITS __NFDBITS
DW_MACRO_define_strp - lineno: 85 macro: FD_SET(fd,fdsetp) __FD_SET (fd, fdsetp)
DW_MACRO_define_strp - lineno: 86 macro: FD_CLR(fd,fdsetp) __FD_CLR (fd, fdsetp)
DW_MACRO_define_strp - lineno: 87 macro: FD_ISSET(fd,fdsetp) __FD_ISSET (fd, fdsetp)
DW_MACRO_define_strp - lineno: 88 macro: FD_ZERO(fdsetp) __FD_ZERO (fdsetp)

0x00001106:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 118 macro: ITIMER_REAL ITIMER_REAL
DW_MACRO_define_strp - lineno: 121 macro: ITIMER_VIRTUAL ITIMER_VIRTUAL
DW_MACRO_define_strp - lineno: 125 macro: ITIMER_PROF ITIMER_PROF
DW_MACRO_define_strp - lineno: 231 macro: timerisset(tvp) ((tvp)->tv_sec || (tvp)->tv_usec)
DW_MACRO_define_strp - lineno: 232 macro: timerclear(tvp) ((tvp)->tv_sec = (tvp)->tv_usec = 0)
DW_MACRO_define_strp - lineno: 233 macro: timercmp(a,b,CMP) (((a)->tv_sec == (b)->tv_sec) ? ((a)->tv_usec CMP (b)->tv_usec) : ((a)->tv_sec CMP (b)->tv_sec))
DW_MACRO_define_strp - lineno: 237 macro: timeradd(a,b,result) do { (result)->tv_sec = (a)->tv_sec + (b)->tv_sec; (result)->tv_usec = (a)->tv_usec + (b)->tv_usec; if ((result)->tv_usec >= 1000000) { ++(result)->tv_sec; (result)->tv_usec -= 1000000; } } while (0)
DW_MACRO_define_strp - lineno: 247 macro: timersub(a,b,result) do { (result)->tv_sec = (a)->tv_sec - (b)->tv_sec; (result)->tv_usec = (a)->tv_usec - (b)->tv_usec; if ((result)->tv_usec < 0) { --(result)->tv_sec; (result)->tv_usec += 1000000; } } while (0)

0x0000113f:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 24 macro: _STDIO_H 1
DW_MACRO_define_strp - lineno: 26 macro: __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION 

0x0000114f:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_undef_strp - lineno: 31 macro: __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION
DW_MACRO_undef_strp - lineno: 37 macro: __GLIBC_USE_LIB_EXT2
DW_MACRO_define_strp - lineno: 42 macro: __GLIBC_USE_LIB_EXT2 0
DW_MACRO_undef_strp - lineno: 67 macro: __GLIBC_USE_IEC_60559_BFP_EXT
DW_MACRO_define_strp - lineno: 71 macro: __GLIBC_USE_IEC_60559_BFP_EXT 0
DW_MACRO_undef_strp - lineno: 73 macro: __GLIBC_USE_IEC_60559_BFP_EXT_C2X
DW_MACRO_define_strp - lineno: 77 macro: __GLIBC_USE_IEC_60559_BFP_EXT_C2X 0
DW_MACRO_undef_strp - lineno: 79 macro: __GLIBC_USE_IEC_60559_EXT
DW_MACRO_define_strp - lineno: 83 macro: __GLIBC_USE_IEC_60559_EXT 0
DW_MACRO_undef_strp - lineno: 90 macro: __GLIBC_USE_IEC_60559_FUNCS_EXT
DW_MACRO_define_strp - lineno: 94 macro: __GLIBC_USE_IEC_60559_FUNCS_EXT 0
DW_MACRO_undef_strp - lineno: 96 macro: __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
DW_MACRO_define_strp - lineno: 100 macro: __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X 0
DW_MACRO_undef_strp - lineno: 105 macro: __GLIBC_USE_IEC_60559_TYPES_EXT
DW_MACRO_define_strp - lineno: 109 macro: __GLIBC_USE_IEC_60559_TYPES_EXT 0

0x000011ad:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 31 macro: __need_size_t 
DW_MACRO_define_strp - lineno: 32 macro: __need_NULL 

0x000011bd:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 181 macro: __size_t__ 
DW_MACRO_define_strp - lineno: 182 macro: __SIZE_T__ 
DW_MACRO_define_strp - lineno: 183 macro: _SIZE_T 
DW_MACRO_define_strp - lineno: 184 macro: _SYS_SIZE_T_H 
DW_MACRO_define_strp - lineno: 185 macro: _T_SIZE_ 
DW_MACRO_define_strp - lineno: 186 macro: _T_SIZE 
DW_MACRO_define_strp - lineno: 187 macro: __SIZE_T 
DW_MACRO_define_strp - lineno: 188 macro: _SIZE_T_ 
DW_MACRO_define_strp - lineno: 189 macro: _BSD_SIZE_T_ 
DW_MACRO_define_strp - lineno: 190 macro: _SIZE_T_DEFINED_ 
DW_MACRO_define_strp - lineno: 191 macro: _SIZE_T_DEFINED 
DW_MACRO_define_strp - lineno: 192 macro: _BSD_SIZE_T_DEFINED_ 
DW_MACRO_define_strp - lineno: 193 macro: _SIZE_T_DECLARED 
DW_MACRO_define_strp - lineno: 194 macro: ___int_size_t_h 
DW_MACRO_define_strp - lineno: 195 macro: _GCC_SIZE_T 
DW_MACRO_define_strp - lineno: 196 macro: _SIZET_ 
DW_MACRO_define_strp - lineno: 203 macro: __size_t 
DW_MACRO_undef_strp - lineno: 231 macro: __need_size_t
DW_MACRO_undef_strp - lineno: 390 macro: NULL
DW_MACRO_define_strp - lineno: 395 macro: NULL ((void *)0)
DW_MACRO_undef_strp - lineno: 401 macro: __need_NULL

0x00001254:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_undef_strp - lineno: 34 macro: __need___va_list
DW_MACRO_define_strp - lineno: 39 macro: __GNUC_VA_LIST 

0x00001264:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 19 macro: __struct_FILE_defined 1
DW_MACRO_define_strp - lineno: 102 macro: __getc_unlocked_body(_fp) (__glibc_unlikely ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)
DW_MACRO_define_strp - lineno: 106 macro: __putc_unlocked_body(_ch,_fp) (__glibc_unlikely ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))
DW_MACRO_define_strp - lineno: 111 macro: _IO_EOF_SEEN 0x0010
DW_MACRO_define_strp - lineno: 112 macro: __feof_unlocked_body(_fp) (((_fp)->_flags & _IO_EOF_SEEN) != 0)
DW_MACRO_define_strp - lineno: 114 macro: _IO_ERR_SEEN 0x0020
DW_MACRO_define_strp - lineno: 115 macro: __ferror_unlocked_body(_fp) (((_fp)->_flags & _IO_ERR_SEEN) != 0)
DW_MACRO_define_strp - lineno: 117 macro: _IO_USER_LOCK 0x8000

0x00001298:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 53 macro: _VA_LIST_DEFINED 
DW_MACRO_define_strp - lineno: 67 macro: __off_t_defined 
DW_MACRO_define_strp - lineno: 78 macro: __ssize_t_defined 
DW_MACRO_define_strp - lineno: 93 macro: _IOFBF 0
DW_MACRO_define_strp - lineno: 94 macro: _IOLBF 1
DW_MACRO_define_strp - lineno: 95 macro: _IONBF 2
DW_MACRO_define_strp - lineno: 99 macro: BUFSIZ 8192
DW_MACRO_define_strp - lineno: 104 macro: EOF (-1)
DW_MACRO_define_strp - lineno: 109 macro: SEEK_SET 0
DW_MACRO_define_strp - lineno: 110 macro: SEEK_CUR 1
DW_MACRO_define_strp - lineno: 111 macro: SEEK_END 2
DW_MACRO_define_strp - lineno: 120 macro: P_tmpdir "/tmp"

0x000012e4:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 19 macro: _BITS_STDIO_LIM_H 1
DW_MACRO_define_strp - lineno: 25 macro: L_tmpnam 20
DW_MACRO_define_strp - lineno: 26 macro: TMP_MAX 238328
DW_MACRO_define_strp - lineno: 27 macro: FILENAME_MAX 4096
DW_MACRO_define_strp - lineno: 30 macro: L_ctermid 9
DW_MACRO_undef_strp - lineno: 36 macro: FOPEN_MAX
DW_MACRO_define_strp - lineno: 37 macro: FOPEN_MAX 16

0x00001312:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 147 macro: stdin stdin
DW_MACRO_define_strp - lineno: 148 macro: stdout stdout
DW_MACRO_define_strp - lineno: 149 macro: stderr stderr
DW_MACRO_undef_strp - lineno: 180 macro: __attr_dealloc_fclose
DW_MACRO_define_strp - lineno: 181 macro: __attr_dealloc_fclose __attr_dealloc (fclose, 1)

0x00001339:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 20 macro: _BITS_FLOATN_H 
DW_MACRO_define_strp - lineno: 32 macro: __HAVE_FLOAT128 1
DW_MACRO_define_strp - lineno: 40 macro: __HAVE_DISTINCT_FLOAT128 1
DW_MACRO_define_strp - lineno: 48 macro: __HAVE_FLOAT64X 1
DW_MACRO_define_strp - lineno: 54 macro: __HAVE_FLOAT64X_LONG_DOUBLE 1
DW_MACRO_define_strp - lineno: 65 macro: __f128(x) x ##f128
DW_MACRO_define_strp - lineno: 77 macro: __CFLOAT128 _Complex _Float128

0x00001367:
macro header: version = 0x0005, flags = 0x00, format = DWARF32
DW_MACRO_define_strp - lineno: 34 macro: __HAVE_FLOAT16 0
DW_MACRO_define_strp - lineno: 35 macro: __HAVE_FLOAT32 1
DW_MACRO_define_strp - lineno: 36 macro: __HAVE_FLOAT64 1
DW_MACRO_define_strp - lineno: 37 macro: __HAVE_FLOAT32X 1
DW_MACRO_define_strp - lineno: 38 macro: __HAVE_FLOAT128X 0
DW_MACRO_define_strp - lineno: 52 macro: __HAVE_DISTINCT_FLOAT16 __HAVE_FLOAT16
DW_MACRO_define_strp - lineno: 53 macro: __HAVE_DISTINCT_FLOAT32 0
DW_MACRO_define_strp - lineno: 54 macro: __HAVE_DISTINCT_FLOAT64 0
DW_MACRO_define_strp - lineno: 55 macro: __HAVE_DISTINCT_FLOAT32X 0
DW_MACRO_define_strp - lineno: 56 macro: __HAVE_DISTINCT_FLOAT64X 0
DW_MACRO_define_strp - lineno: 57 macro: __HAVE_DISTINCT_FLOAT128X __HAVE_FLOAT128X
DW_MACRO_define_strp - lineno: 63 macro: __HAVE_FLOAT128_UNLIKE_LDBL (__HAVE_DISTINCT_FLOAT128 && __LDBL_MANT_DIG__ != 113)
DW_MACRO_define_strp - lineno: 70 macro: __HAVE_FLOATN_NOT_TYPEDEF 1
DW_MACRO_define_strp - lineno: 93 macro: __f32(x) x ##f32
DW_MACRO_define_strp - lineno: 105 macro: __f64(x) x ##f64
DW_MACRO_define_strp - lineno: 113 macro: __f32x(x) x ##f32x
DW_MACRO_define_strp - lineno: 125 macro: __f64x(x) x ##f64x
DW_MACRO_define_strp - lineno: 151 macro: __CFLOAT32 _Complex _Float32
DW_MACRO_define_strp - lineno: 163 macro: __CFLOAT64 _Complex _Float64
DW_MACRO_define_strp - lineno: 171 macro: __CFLOAT32X _Complex _Float32x
DW_MACRO_define_strp - lineno: 183 macro: __CFLOAT64X _Complex _Float64x


.debug_aranges contents:
Address Range Header: length = 0x0000002c, format = DWARF32, version = 0x0002, cu_offset = 0x00000000, addr_size = 0x08, seg_size = 0x00
[0x0000000000001169, 0x0000000000001209)

.debug_line contents:
debug_line[0x00000000]
Line table prologue:
    total_length: 0x0000013a
          format: DWARF32
         version: 5
    address_size: 8
 seg_select_size: 0
 prologue_length: 0x000000f1
 min_inst_length: 1
max_ops_per_inst: 1
 default_is_stmt: 1
       line_base: -5
      line_range: 14
     opcode_base: 13
standard_opcode_lengths[DW_LNS_copy] = 0
standard_opcode_lengths[DW_LNS_advance_pc] = 1
standard_opcode_lengths[DW_LNS_advance_line] = 1
standard_opcode_lengths[DW_LNS_set_file] = 1
standard_opcode_lengths[DW_LNS_set_column] = 1
standard_opcode_lengths[DW_LNS_negate_stmt] = 0
standard_opcode_lengths[DW_LNS_set_basic_block] = 0
standard_opcode_lengths[DW_LNS_const_add_pc] = 0
standard_opcode_lengths[DW_LNS_fixed_advance_pc] = 1
standard_opcode_lengths[DW_LNS_set_prologue_end] = 0
standard_opcode_lengths[DW_LNS_set_epilogue_begin] = 0
standard_opcode_lengths[DW_LNS_set_isa] = 1
include_directories[  0] =  .debug_line_str[0x00000009] = "/home/zack/Tools/MQP/code_slicer/examples/simple"
include_directories[  1] =  .debug_line_str[0x0000003a] = "/usr/include"
include_directories[  2] =  .debug_line_str[0x00000047] = "/usr/include/x86_64-linux-gnu/sys"
include_directories[  3] =  .debug_line_str[0x00000069] = "/usr/include/x86_64-linux-gnu/bits"
include_directories[  4] =  .debug_line_str[0x0000008c] = "/usr/include/x86_64-linux-gnu/gnu"
include_directories[  5] =  .debug_line_str[0x000000ae] = "/usr/include/x86_64-linux-gnu/bits/types"
include_directories[  6] =  .debug_line_str[0x000000d7] = "/usr/lib/gcc/x86_64-linux-gnu/11/include"
file_names[  0]:
           name:  .debug_line_str[0x00000000] = "simple.c"
      dir_index: 0
file_names[  1]:
           name:  .debug_line_str[0x00000000] = "simple.c"
      dir_index: 0
file_names[  2]:
           name:  .debug_line_str[0x00000100] = "stdio.h"
      dir_index: 1
file_names[  3]:
           name:  .debug_line_str[0x00000108] = "stdc-predef.h"
      dir_index: 1
file_names[  4]:
           name:  .debug_line_str[0x00000116] = "time.h"
      dir_index: 2
file_names[  5]:
           name:  .debug_line_str[0x0000011d] = "features.h"
      dir_index: 1
file_names[  6]:
           name:  .debug_line_str[0x00000128] = "features-time64.h"
      dir_index: 1
file_names[  7]:
           name:  .debug_line_str[0x0000013a] = "wordsize.h"
      dir_index: 3
file_names[  8]:
           name:  .debug_line_str[0x00000145] = "timesize.h"
      dir_index: 3
file_names[  9]:
           name:  .debug_line_str[0x00000150] = "cdefs.h"
      dir_index: 2
file_names[ 10]:
           name:  .debug_line_str[0x00000158] = "long-double.h"
      dir_index: 3
file_names[ 11]:
           name:  .debug_line_str[0x00000166] = "stubs.h"
      dir_index: 4
file_names[ 12]:
           name:  .debug_line_str[0x0000016e] = "stubs-64.h"
      dir_index: 4
file_names[ 13]:
           name:  .debug_line_str[0x00000179] = "types.h"
      dir_index: 3
file_names[ 14]:
           name:  .debug_line_str[0x00000181] = "typesizes.h"
      dir_index: 3
file_names[ 15]:
           name:  .debug_line_str[0x00000131] = "time64.h"
      dir_index: 3
file_names[ 16]:
           name:  .debug_line_str[0x0000018d] = "time_t.h"
      dir_index: 5
file_names[ 17]:
           name:  .debug_line_str[0x00000196] = "struct_timeval.h"
      dir_index: 5
file_names[ 18]:
           name:  .debug_line_str[0x000001a7] = "select.h"
      dir_index: 2
file_names[ 19]:
           name:  .debug_line_str[0x000001a7] = "select.h"
      dir_index: 3
file_names[ 20]:
           name:  .debug_line_str[0x000001b2] = "sigset_t.h"
      dir_index: 5
file_names[ 21]:
           name:  .debug_line_str[0x000001b0] = "__sigset_t.h"
      dir_index: 5
file_names[ 22]:
           name:  .debug_line_str[0x000001bd] = "struct_timespec.h"
      dir_index: 5
file_names[ 23]:
           name:  .debug_line_str[0x000001cf] = "endian.h"
      dir_index: 3
file_names[ 24]:
           name:  .debug_line_str[0x000001d8] = "endianness.h"
      dir_index: 3
file_names[ 25]:
           name:  .debug_line_str[0x000001e5] = "libc-header-start.h"
      dir_index: 3
file_names[ 26]:
           name:  .debug_line_str[0x000001f9] = "stddef.h"
      dir_index: 6
file_names[ 27]:
           name:  .debug_line_str[0x00000202] = "stdarg.h"
      dir_index: 6
file_names[ 28]:
           name:  .debug_line_str[0x0000020b] = "__fpos_t.h"
      dir_index: 5
file_names[ 29]:
           name:  .debug_line_str[0x00000216] = "__mbstate_t.h"
      dir_index: 5
file_names[ 30]:
           name:  .debug_line_str[0x00000224] = "__fpos64_t.h"
      dir_index: 5
file_names[ 31]:
           name:  .debug_line_str[0x00000231] = "__FILE.h"
      dir_index: 5
file_names[ 32]:
           name:  .debug_line_str[0x00000233] = "FILE.h"
      dir_index: 5
file_names[ 33]:
           name:  .debug_line_str[0x0000023a] = "struct_FILE.h"
      dir_index: 5
file_names[ 34]:
           name:  .debug_line_str[0x00000248] = "stdio_lim.h"
      dir_index: 3
file_names[ 35]:
           name:  .debug_line_str[0x00000254] = "floatn.h"
      dir_index: 3
file_names[ 36]:
           name:  .debug_line_str[0x0000025d] = "floatn-common.h"
      dir_index: 3

            Address            Line   Column File   ISA Discriminator Flags
            ------------------ ------ ------ ------ --- ------------- -------------
0x000000fd: 05 DW_LNS_set_column (23)
0x000000ff: 00 DW_LNE_set_address (0x0000000000001169)
0x0000010a: 17 address += 0,  line += 5
            0x0000000000001169      6     23      1   0             0  is_stmt
0x0000010b: 05 DW_LNS_set_column (14)
0x0000010d: e6 address += 15,  line += 2
            0x0000000000001178      8     14      1   0             0  is_stmt
0x0000010e: 05 DW_LNS_set_column (5)
0x00000110: 74 address += 7,  line += 0
            0x000000000000117f      8      5      1   0             0  is_stmt
0x00000111: 05 DW_LNS_set_column (9)
0x00000113: 00 DW_LNE_set_discriminator (3)
0x00000117: 30 address += 2,  line += 2
            0x0000000000001181     10      9      1   0             3  is_stmt
0x00000118: 05 DW_LNS_set_column (30)
0x0000011a: 00 DW_LNE_set_discriminator (3)
0x0000011e: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x0000011f: 80 address += 8,  line += -2
            0x000000000000119a      8     30      1   0             3  is_stmt
0x00000120: 05 DW_LNS_set_column (22)
0x00000122: 00 DW_LNE_set_discriminator (1)
0x00000126: 4a address += 4,  line += 0
            0x000000000000119e      8     22      1   0             1  is_stmt
0x00000127: 05 DW_LNS_set_column (1)
0x00000129: 86 address += 8,  line += 4
            0x00000000000011a6     12      1      1   0             0  is_stmt
0x0000012a: 05 DW_LNS_set_column (12)
0x0000012c: 4d address += 4,  line += 3
            0x00000000000011aa     15     12      1   0             0  is_stmt
0x0000012d: 05 DW_LNS_set_column (5)
0x0000012f: 83 address += 8,  line += 1
            0x00000000000011b2     16      5      1   0             0  is_stmt
0x00000130: e6 address += 15,  line += 2
            0x00000000000011c1     18      5      1   0             0  is_stmt
0x00000131: e5 address += 15,  line += 1
            0x00000000000011d0     19      5      1   0             0  is_stmt
0x00000132: a0 address += 10,  line += 2
            0x00000000000011da     21      5      1   0             0  is_stmt
0x00000133: e5 address += 15,  line += 1
            0x00000000000011e9     22      5      1   0             0  is_stmt
0x00000134: 9f address += 10,  line += 1
            0x00000000000011f3     23      5      1   0             0  is_stmt
0x00000135: 05 DW_LNS_set_column (1)
0x00000137: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000138: 3d address += 3,  line += 1
            0x0000000000001207     24      1      1   0             0  is_stmt
0x00000139: 02 DW_LNS_advance_pc (2)
0x0000013b: 00 DW_LNE_end_sequence
            0x0000000000001209     24      1      1   0             0  is_stmt end_sequence


.debug_str contents:
0x00000000: "__attr_dealloc_fclose"
0x00000016: "__SIG_ATOMIC_MAX__ 0x7fffffff"
0x00000034: "__FLT64_HAS_QUIET_NAN__ 1"
0x0000004e: "_SIZE_T_DEFINED "
0x0000005f: "__FDS_BITS(set) ((set)->__fds_bits)"
0x00000083: "__DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD"
0x000000b4: "__FLT32_HAS_INFINITY__ 1"
0x000000cd: "__FLT64_MAX_EXP__ 1024"
0x000000e4: "__FLT_MIN_10_EXP__ (-37)"
0x000000fd: "__BIG_ENDIAN 4321"
0x0000010f: "__FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x"
0x00000150: "__FLT32X_MAX_EXP__ 1024"
0x00000168: "__GLIBC_USE_DEPRECATED_GETS 0"
0x00000186: "__GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1"
0x000001aa: "__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION"
0x000001da: "___int_size_t_h "
0x000001eb: "__DEC64_EPSILON__ 1E-15DD"
0x00000205: "__DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)"
0x0000024e: "__INTPTR_MAX__ 0x7fffffffffffffffL"
0x00000271: "__flexarr []"
0x0000027e: "__FLT32_MANT_DIG__ 24"
0x00000294: "__GLIBC_USE_IEC_60559_EXT"
0x000002ae: "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1"
0x000002d3: "__glibc_fortify_n(f,__l,__s,__osz,...) (__glibc_safe_or_unknown_len (__l, __s, __osz) ? __ ## f ## _alias (__VA_ARGS__) : (__glibc_unsafe_len (__l, __s, __osz) ? __ ## f ## _chk_warn (__VA_ARGS__, (__osz) / (__s)) : __ ## f ## _chk (__VA_ARGS__, (__osz) / (__s))))"
0x000003dc: "__attribute_artificial__ __attribute__ ((__artificial__))"
0x00000416: "__USE_ISOC11 1"
0x00000425: "_IOFBF 0"
0x0000042e: "__attribute_malloc__ __attribute__ ((__malloc__))"
0x00000460: "SEEK_CUR 1"
0x0000046b: "__FLT32X_DECIMAL_DIG__ 17"
0x00000485: "__k8__ 1"
0x0000048e: "__DBL_MIN_EXP__ (-1021)"
0x000004a6: "__INT_FAST64_MAX__ 0x7fffffffffffffffL"
0x000004cd: "__GCC_ATOMIC_CHAR16_T_LOCK_FREE 2"
0x000004ef: "stdout stdout"
0x000004fd: "__CFLOAT32 _Complex _Float32"
0x0000051a: "__need_NULL "
0x00000527: "_SYS_CDEFS_H 1"
0x00000536: "__FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x"
0x00000574: "__glibc_unlikely(cond) __builtin_expect ((cond), 0)"
0x000005a8: "__SIZEOF_WINT_T__ 4"
0x000005bc: "__GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))"
0x00000610: "__UINTPTR_MAX__ 0xffffffffffffffffUL"
0x00000635: "__attribute_const__ __attribute__ ((__const__))"
0x00000665: "__GLIBC_USE_DEPRECATED_GETS"
0x00000681: "__FLT32_NORM_MAX__ 3.40282346638528859811704183484516925e+38F32"
0x000006c1: "__USE_LARGEFILE64"
0x000006d3: "__GLIBC_USE_IEC_60559_BFP_EXT_C2X 0"
0x000006f7: "__RLIM_T_TYPE __SYSCALL_ULONG_TYPE"
0x0000071a: "__LDBL_REDIR(name,proto) name proto"
0x0000073e: "__UINT64_MAX__ 0xffffffffffffffffUL"
0x00000762: "__GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))"
0x000007b9: "__GLIBC_USE_IEC_60559_FUNCS_EXT"
0x000007d9: "__FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64"
0x00000815: "__LONG_LONG_WIDTH__ 64"
0x0000082c: "_POSIX_SOURCE"
0x0000083a: "__FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F"
0x00000878: "__CHAR16_TYPE__ short unsigned int"
0x0000089b: "__SIZEOF_SIZE_T__ 8"
0x000008af: "__warnattr(msg) __attribute__((__warning__ (msg)))"
0x000008e2: "__ORDER_BIG_ENDIAN__ 4321"
0x000008fc: "GNU C17 11.3.0 -mtune=generic -march=x86-64 -g3 -O0 -fasynchronous-unwind-tables -fstack-protector-strong -fstack-clash-protection -fcf-protection"
0x0000098f: "__USE_ISOCXX11"
0x0000099e: "__USE_ATFILE 1"
0x000009ad: "__UINT64_C(c) c ## UL"
0x000009c3: "__GNU_LIBRARY__"
0x000009d3: "__DBL_MANT_DIG__ 53"
0x000009e7: "__FLT_HAS_QUIET_NAN__ 1"
0x000009ff: "__FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32"
0x00000a3a: "__stub_chflags "
0x00000a4a: "__INT_MAX__ 0x7fffffff"
0x00000a61: "__ATOMIC_RELEASE 3"
0x00000a74: "__FLT_IS_IEC_60559__ 2"
0x00000a8b: "__stub_fchflags "
0x00000a9c: "__INT16_TYPE__ short int"
0x00000ab5: "__DECIMAL_BID_FORMAT__ 1"
0x00000ace: "count_to"
0x00000ad7: "__DEC32_EPSILON__ 1E-6DF"
0x00000af0: "_BITS_ENDIANNESS_H 1"
0x00000b05: "_SIZE_T_DECLARED "
0x00000b17: "__glibc_objsize0(__o) __bos0 (__o)"
0x00000b3a: "__LDBL_DIG__ 18"
0x00000b4a: "__FLT64X_MAX_EXP__ 16384"
0x00000b63: "__ATOMIC_SEQ_CST 5"
0x00000b76: "__USE_POSIX2 1"
0x00000b85: "__USE_ISOC95 1"
0x00000b94: "__TIME64_T_TYPE __TIME_T_TYPE"
0x00000bb2: "__SIZEOF_SHORT__ 2"
0x00000bc5: "__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X 0"
0x00000beb: "__UINT64_TYPE__ long unsigned int"
0x00000c0d: "__INT_FAST32_MAX__ 0x7fffffffffffffffL"
0x00000c34: "__INT_LEAST8_TYPE__ signed char"
0x00000c54: "__size_t "
0x00000c5e: "__LDBL_REDIR1(name,proto,alias) name proto"
0x00000c89: "__UINT_LEAST32_TYPE__ unsigned int"
0x00000cac: "__stub_sigreturn "
0x00000cbe: "__ptr_t void *"
0x00000ccd: "__S32_TYPE int"
0x00000cdc: "__UINT_FAST32_TYPE__ long unsigned int"
0x00000d03: "__GLIBC_USE_IEC_60559_BFP_EXT_C2X"
0x00000d25: "__BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__"
0x00000d4c: "__LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L"
0x00000d86: "__FLT32_MIN_10_EXP__ (-37)"
0x00000da1: "__DBL_HAS_DENORM__ 1"
0x00000db6: "__INT_LEAST64_TYPE__ long int"
0x00000dd4: "__WCHAR_MIN__ (-__WCHAR_MAX__ - 1)"
0x00000df7: "__NTHNL(fct) __attribute__ ((__nothrow__)) fct"
0x00000e26: "__INO_T_MATCHES_INO64_T 1"
0x00000e40: "__STDC_UTF_32__ 1"
0x00000e52: "__BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE"
0x00000e78: "__attribute_maybe_unused__ __attribute__ ((__unused__))"
0x00000eb0: "__INT_LEAST16_MAX__ 0x7fff"
0x00000ecb: "__UINT_LEAST64_TYPE__ long unsigned int"
0x00000ef3: "__USE_MISC"
0x00000efe: "__SCHAR_MAX__ 0x7f"
0x00000f11: "__fortified_attr_access(a,o,s) __attr_access ((a, o, s))"
0x00000f4a: "__GNUC_EXECUTION_CHARSET_NAME \"UTF-8\""
0x00000f70: "__extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))"
0x00000fbf: "__FLT64_DIG__ 15"
0x00000fd0: "__INT_FAST8_TYPE__ signed char"
0x00000fef: "__PIE__ 2"
0x00000ff9: "_SIZET_ "
0x00001002: "__LDBL_IS_IEC_60559__ 2"
0x0000101a: "__GLIBC_USE_IEC_60559_TYPES_EXT"
0x0000103a: "__FLT32X_HAS_INFINITY__ 1"
0x00001054: "__USE_UNIX98"
0x00001061: "__FLT128_HAS_INFINITY__ 1"
0x0000107b: "_ATFILE_SOURCE"
0x0000108a: "__MMX_WITH_SSE__ 1"
0x0000109d: "__UINT_LEAST8_TYPE__ unsigned char"
0x000010c0: "__SIZEOF_INT128__ 16"
0x000010d5: "__NTH(fct) __attribute__ ((__nothrow__ __LEAF)) fct"
0x00001109: "__HAVE_FLOAT128 1"
0x0000111b: "__glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)"
0x00001167: "__INT8_C(c) c"
0x00001175: "_T_SIZE "
0x0000117e: "__FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128"
0x000011bd: "__UINTMAX_MAX__ 0xffffffffffffffffUL"
0x000011e2: "__FLT128_NORM_MAX__ 1.18973149535723176508575932662800702e+4932F128"
0x00001226: "__f32x(x) x ##f32x"
0x00001239: "__INT_LEAST32_TYPE__ int"
0x00001252: "__INT_LEAST16_WIDTH__ 16"
0x0000126b: "__attribute_copy__(arg) __attribute__ ((__copy__ (arg)))"
0x000012a4: "__ssize_t_defined "
0x000012b7: "_T_SIZE_ "
0x000012c1: "_IO_EOF_SEEN 0x0010"
0x000012d5: "__glibc_has_attribute(attr) __has_attribute (attr)"
0x00001308: "__extern_inline extern __inline __attribute__ ((__gnu_inline__))"
0x00001349: "__TIME_T_TYPE __SYSCALL_SLONG_TYPE"
0x0000136c: "__FLT64_IS_IEC_60559__ 2"
0x00001385: "__FLT32_HAS_DENORM__ 1"
0x0000139c: "__unix__ 1"
0x000013a7: "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1"
0x000013cc: "__FLT64X_MIN_EXP__ (-16381)"
0x000013e8: "_BITS_TIME64_H 1"
0x000013f9: "__SYSCALL_ULONG_TYPE __ULONGWORD_TYPE"
0x0000141f: "__stub_setlogin "
0x00001430: "__FLT_DIG__ 6"
0x0000143e: "__INT_FAST16_WIDTH__ 64"
0x00001456: "_BSD_SIZE_T_ "
0x00001464: "__pie__ 2"
0x0000146e: "__HAVE_DISTINCT_FLOAT128X __HAVE_FLOAT128X"
0x00001499: "__HAVE_DISTINCT_FLOAT16 __HAVE_FLOAT16"
0x000014c0: "_BITS_TYPES_H 1"
0x000014d0: "__DEC32_MIN__ 1E-95DF"
0x000014e6: "__STDC_IEC_60559_COMPLEX__ 201404L"
0x00001509: "__GCC_IEC_559 2"
0x00001519: "__FLT128_MIN_EXP__ (-16381)"
0x00001535: "__HAVE_FLOAT32X 1"
0x00001547: "__FLT32_HAS_QUIET_NAN__ 1"
0x00001561: "_BSD_SIZE_T_DEFINED_ "
0x00001577: "__UINT_LEAST16_MAX__ 0xffff"
0x00001593: "__UINT_FAST64_MAX__ 0xffffffffffffffffUL"
0x000015bc: "__GNUC__ 11"
0x000015c8: "__attribute_used__ __attribute__ ((__used__))"
0x000015f6: "__UINT_LEAST8_MAX__ 0xff"
0x0000160f: "ITIMER_PROF ITIMER_PROF"
0x00001627: "__DEC128_MIN_EXP__ (-6142)"
0x00001642: "__KERNEL_STRICT_NAMES "
0x00001659: "__WCHAR_TYPE__ int"
0x0000166c: "__INT8_MAX__ 0x7f"
0x0000167e: "__DEC128_EPSILON__ 1E-33DL"
0x00001699: "__USE_POSIX199506"
0x000016ab: "__need_NULL"
0x000016b7: "__CET__ 3"
0x000016c1: "__REDIRECT_NTHNL(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROWNL"
0x00001716: "__FLT128_MAX_EXP__ 16384"
0x0000172f: "__STATFS_MATCHES_STATFS64 1"
0x0000174b: "__FLT_RADIX__ 2"
0x0000175b: "__FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x"
0x000017a0: "__PMT(args) args"
0x000017b1: "__GID_T_TYPE __U32_TYPE"
0x000017c9: "__SIZEOF_LONG_DOUBLE__ 16"
0x000017e3: "__DBL_HAS_QUIET_NAN__ 1"
0x000017fb: "__wur "
0x00001802: "__FLT64X_IS_IEC_60559__ 2"
0x0000181c: "_GCC_SIZE_T "
0x00001829: "__LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L"
0x0000186a: "__PID_T_TYPE __S32_TYPE"
0x00001882: "FD_SET(fd,fdsetp) __FD_SET (fd, fdsetp)"
0x000018aa: "__FLT64_HAS_INFINITY__ 1"
0x000018c3: "__UINT_FAST8_MAX__ 0xff"
0x000018db: "ITIMER_VIRTUAL ITIMER_VIRTUAL"
0x000018f9: "__ATOMIC_HLE_RELEASE 131072"
0x00001915: "__LDBL_MAX_EXP__ 16384"
0x0000192c: "__stub_gtty "
0x00001939: "__USECONDS_T_TYPE __U32_TYPE"
0x00001956: "__SIZE_T "
0x00001960: "__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI 0"
0x00001986: "__INTPTR_TYPE__ long int"
0x0000199f: "__DEC64_MAX__ 9.999999999999999E384DD"
0x000019c5: "_BITS_STDIO_LIM_H 1"
0x000019d9: "__GCC_ATOMIC_INT_LOCK_FREE 2"
0x000019f6: "_SYS_SIZE_T_H "
0x00001a05: "__HAVE_DISTINCT_FLOAT64X 0"
0x00001a20: "__MMX__ 1"
0x00001a2a: "__BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE"
0x00001a4f: "__attribute_pure__ __attribute__ ((__pure__))"
0x00001a7d: "__FLT64X_DIG__ 18"
0x00001a8f: "__INT_LEAST64_WIDTH__ 64"
0x00001aa8: "__HAVE_GENERIC_SELECTION 1"
0x00001ac3: "__FLT128_MANT_DIG__ 113"
0x00001adb: "__ORDER_LITTLE_ENDIAN__ 1234"
0x00001af8: "__USE_XOPEN2K 1"
0x00001b08: "_____fpos_t_defined 1"
0x00001b1e: "__SIZEOF_PTRDIFF_T__ 8"
0x00001b35: "FD_ISSET(fd,fdsetp) __FD_ISSET (fd, fdsetp)"
0x00001b61: "__DEC128_MANT_DIG__ 34"
0x00001b78: "__USE_ISOC99 1"
0x00001b87: "__USE_XOPEN2K8 1"
0x00001b98: "__INT32_TYPE__ int"
0x00001bab: "__KERNEL_STRICT_NAMES"
0x00001bc1: "__U32_TYPE unsigned int"
0x00001bd9: "__code_model_small__ 1"
0x00001bf0: "__USE_ISOC95"
0x00001bfd: "__FLT64X_HAS_DENORM__ 1"
0x00001c15: "__DEC32_MAX_EXP__ 97"
0x00001c2a: "__NFDBITS (8 * (int) sizeof (__fd_mask))"
0x00001c53: "__USE_ISOC99"
0x00001c60: "__USE_POSIX199309 1"
0x00001c74: "__SIZE_T__ "
0x00001c80: "__GLIBC_USE_ISOC2X"
0x00001c93: "__GLIBC_USE_IEC_60559_EXT 0"
0x00001caf: "L_tmpnam 20"
0x00001cbb: "timercmp(a,b,CMP) (((a)->tv_sec == (b)->tv_sec) ? ((a)->tv_usec CMP (b)->tv_usec) : ((a)->tv_sec CMP (b)->tv_sec))"
0x00001d2e: "__STDC_IEC_559_COMPLEX__ 1"
0x00001d49: "__FLT64X_MIN_10_EXP__ (-4931)"
0x00001d67: "__need___va_list"
0x00001d78: "__STDC_ISO_10646__ 201706L"
0x00001d93: "__va_arg_pack_len() __builtin_va_arg_pack_len ()"
0x00001dc4: "__BEGIN_DECLS "
0x00001dd3: "__SSIZE_T_TYPE __SWORD_TYPE"
0x00001def: "__HAVE_SPECULATION_SAFE_VALUE 1"
0x00001e0f: "__FLT128_MAX_10_EXP__ 4932"
0x00001e2a: "__FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128"
0x00001e69: "__SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE"
0x00001e91: "SEEK_END 2"
0x00001e9c: "__INT_FAST8_WIDTH__ 8"
0x00001eb2: "__FLT64_MIN_10_EXP__ (-307)"
0x00001ece: "__GLIBC_USE_LIB_EXT2 0"
0x00001ee5: "__attr_access(x) __attribute__ ((__access__ x))"
0x00001f15: "__DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)"
0x00001f57: "__GNUC_MINOR__ 3"
0x00001f68: "__RLIM_T_MATCHES_RLIM64_T 1"
0x00001f84: "__amd64__ 1"
0x00001f90: "__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X"
0x00001fb4: "____mbstate_t_defined 1"
0x00001fcc: "__attribute_alloc_align__(param) __attribute__ ((__alloc_align__ param))"
0x00002015: "__FLT32_DECIMAL_DIG__ 9"
0x0000202d: "__FLT128_DIG__ 33"
0x0000203f: "__UINT16_TYPE__ short unsigned int"
0x00002062: "__FD_MASK(d) ((__fd_mask) (1UL << ((d) % __NFDBITS)))"
0x00002098: "__HAVE_FLOAT64 1"
0x000020a9: "__WCHAR_WIDTH__ 32"
0x000020bc: "__GCC_ATOMIC_CHAR_LOCK_FREE 2"
0x000020da: "_BITS_ENDIAN_H 1"
0x000020eb: "__HAVE_FLOAT64X_LONG_DOUBLE 1"
0x00002109: "__LONG_LONG_MAX__ 0x7fffffffffffffffLL"
0x00002130: "__ULONG32_TYPE unsigned int"
0x0000214c: "__UINT_LEAST16_TYPE__ short unsigned int"
0x00002175: "__FLT_MAX_10_EXP__ 38"
0x0000218b: "__HAVE_FLOAT16 0"
0x0000219c: "__FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x"
0x000021dd: "NULL ((void *)0)"
0x000021ee: "__f32(x) x ##f32"
0x000021ff: "__USE_POSIX_IMPLICITLY 1"
0x00002218: "__NO_INLINE__ 1"
0x00002228: "__va_arg_pack() __builtin_va_arg_pack ()"
0x00002251: "__INTMAX_MAX__ 0x7fffffffffffffffL"
0x00002274: "__TIMESIZE __WORDSIZE"
0x0000228a: "__DADDR_T_TYPE __S32_TYPE"
0x000022a4: "__FLT64_DECIMAL_DIG__ 17"
0x000022bd: "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1"
0x000022e2: "__FLT32_MIN_EXP__ (-125)"
0x000022fb: "__SIZE_TYPE__ long unsigned int"
0x0000231b: "__LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L"
0x00002355: "__FD_ZERO(s) do { unsigned int __i; fd_set *__arr = (s); for (__i = 0; __i < sizeof (fd_set) / sizeof (__fd_mask); ++__i) __FDS_BITS (__arr)[__i] = 0; } while (0)"
0x000023f8: "__DEC_EVAL_METHOD__ 2"
0x0000240e: "BUFSIZ 8192"
0x0000241a: "__FLT_MAX__ 3.40282346638528859811704183484516925e+38F"
0x00002451: "L_ctermid 9"
0x0000245d: "__DBL_MIN_10_EXP__ (-307)"
0x00002477: "_VA_LIST_DEFINED "
0x00002489: "__LDBL_MIN_10_EXP__ (-4931)"
0x000024a5: "__GXX_ABI_VERSION 1016"
0x000024bc: "__FLT32_DIG__ 6"
0x000024cc: "_BITS_FLOATN_H "
0x000024dc: "_IONBF 2"
0x000024e5: "__FLT64_HAS_DENORM__ 1"
0x000024fc: "__FLT_EVAL_METHOD__ 0"
0x00002512: "__FLT64X_NORM_MAX__ 1.18973149535723176502126385303097021e+4932F64x"
0x00002556: "__FLT32X_HAS_DENORM__ 1"
0x0000256e: "__x86_64__ 1"
0x0000257b: "__HAVE_DISTINCT_FLOAT32X 0"
0x00002596: "_____fpos64_t_defined 1"
0x000025ae: "__INTMAX_C(c) c ## L"
0x000025c3: "__REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))"
0x00002608: "__FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x"
0x00002647: "__DEC64_MIN_EXP__ (-382)"
0x00002660: "__LDBL_REDIR2_DECL(name) "
0x0000267a: "__ID_T_TYPE __U32_TYPE"
0x00002691: "__USE_POSIX199506 1"
0x000026a5: "__KEY_T_TYPE __S32_TYPE"
0x000026bd: "__ATOMIC_RELAXED 0"
0x000026d0: "__INT_LEAST64_MAX__ 0x7fffffffffffffffL"
0x000026f8: "__INT_LEAST8_WIDTH__ 8"
0x0000270f: "__FD_ISSET(d,s) ((__FDS_BITS (s)[__FD_ELT (d)] & __FD_MASK (d)) != 0)"
0x00002755: "__LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW"
0x0000278c: "__UINT8_MAX__ 0xff"
0x0000279f: "__glibc_safe_or_unknown_len(__l,__s,__osz) (__glibc_unsigned_or_positive (__l) && __builtin_constant_p (__glibc_safe_len_cond ((__SIZE_TYPE__) (__l), __s, __osz)) && __glibc_safe_len_cond ((__SIZE_TYPE__) (__l), __s, __osz))"
0x00002880: "__UINT16_MAX__ 0xffff"
0x00002896: "__GLIBC_USE(F) __GLIBC_USE_ ## F"
0x000028b7: "__GLIBC_USE_ISOC2X 0"
0x000028cc: "__INT_FAST64_TYPE__ long int"
0x000028e9: "__FD_CLR(d,s) ((void) (__FDS_BITS (s)[__FD_ELT(d)] &= ~__FD_MASK(d)))"
0x0000292f: "__attribute_noinline__ __attribute__ ((__noinline__))"
0x00002965: "__UINT32_MAX__ 0xffffffffU"
0x00002980: "__INTMAX_WIDTH__ 64"
0x00002994: "__DEC32_MAX__ 9.999999E96DF"
0x000029b0: "__DBL_IS_IEC_60559__ 2"
0x000029c7: "__PTRDIFF_MAX__ 0x7fffffffffffffffL"
0x000029eb: "__USE_POSIX199309"
0x000029fd: "__INT_LEAST16_TYPE__ short int"
0x00002a1c: "__FLT32_MAX_EXP__ 128"
0x00002a32: "__gnu_linux__ 1"
0x00002a42: "__STD_TYPE typedef"
0x00002a55: "__MODE_T_TYPE __U32_TYPE"
0x00002a6e: "__SIZEOF_FLOAT128__ 16"
0x00002a85: "__USE_XOPEN2K"
0x00002a93: "__DBL_DIG__ 15"
0x00002aa2: "NFDBITS __NFDBITS"
0x00002ab4: "__INT_LEAST8_MAX__ 0x7f"
0x00002acc: "__S16_TYPE short int"
0x00002ae1: "__NLINK_T_TYPE __SYSCALL_ULONG_TYPE"
0x00002b05: "timerclear(tvp) ((tvp)->tv_sec = (tvp)->tv_usec = 0)"
0x00002b3a: "__LP64__ 1"
0x00002b45: "__SYSCALL_WORDSIZE 64"
0x00002b5b: "__SQUAD_TYPE long int"
0x00002b71: "__GCC_ATOMIC_LONG_LOCK_FREE 2"
0x00002b8f: "__FLT32X_DIG__ 15"
0x00002ba1: "__FLT32X_MANT_DIG__ 53"
0x00002bb8: "__LDBL_REDIR_NTH(name,proto) name proto __THROW"
0x00002be8: "_LP64 1"
0x00002bf0: "_FEATURES_H 1"
0x00002bfe: "__always_inline __inline __attribute__ ((__always_inline__))"
0x00002c3b: "__FSWORD_T_TYPE __SYSCALL_SLONG_TYPE"
0x00002c60: "__SLONGWORD_TYPE long int"
0x00002c7a: "__stub_stty "
0x00002c87: "__x86_64 1"
0x00002c92: "__FLT64X_MAX_10_EXP__ 4932"
0x00002cad: "__DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)"
0x00002cef: "__FLT32X_IS_IEC_60559__ 2"
0x00002d09: "printf"
0x00002d10: "__GCC_ATOMIC_BOOL_LOCK_FREE 2"
0x00002d2e: "__UINT_FAST32_MAX__ 0xffffffffffffffffUL"
0x00002d57: "__FINITE_MATH_ONLY__ 0"
0x00002d6e: "__U16_TYPE unsigned short int"
0x00002d8c: "__FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64"
0x00002dc8: "__size_t__ "
0x00002dd4: "__FD_SETSIZE 1024"
0x00002de6: "__USE_XOPEN2K8XSI"
0x00002df8: "__PDP_ENDIAN 3412"
0x00002e0a: "__GCC_ASM_FLAG_OUTPUTS__ 1"
0x00002e25: "__attr_dealloc_fclose __attr_dealloc (fclose, 1)"
0x00002e56: "__UINT_LEAST64_MAX__ 0xffffffffffffffffUL"
0x00002e80: "__PMT"
0x00002e86: "__UQUAD_TYPE unsigned long int"
0x00002ea5: "__ELF__ 1"
0x00002eaf: "__FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x"
0x00002eed: "__UINTPTR_TYPE__ long unsigned int"
0x00002f10: "__INT16_C(c) c"
0x00002f1f: "__GCC_HAVE_DWARF2_CFI_ASM 1"
0x00002f3b: "__CFLOAT32X _Complex _Float32x"
0x00002f5a: "__SIZEOF_FLOAT__ 4"
0x00002f6d: "__DEC32_SUBNORMAL_MIN__ 0.000001E-95DF"
0x00002f94: "__FLT64X_HAS_QUIET_NAN__ 1"
0x00002faf: "__FLT_HAS_INFINITY__ 1"
0x00002fc6: "__nonnull(params) __attribute_nonnull__ (params)"
0x00002ff7: "__STD_TYPE"
0x00003002: "__INO64_T_TYPE __UQUAD_TYPE"
0x0000301e: "__GNU_LIBRARY__ 6"
0x00003030: "__STDC__ 1"
0x0000303b: "__glibc_c99_flexarr_available 1"
0x0000305b: "__SSE2__ 1"
0x00003066: "__SLONG32_TYPE int"
0x00003079: "__DBL_MAX_EXP__ 1024"
0x0000308e: "__SIZEOF_LONG__ 8"
0x000030a0: "__ATOMIC_CONSUME 1"
0x000030b3: "__USE_FILE_OFFSET64"
0x000030c7: "__ferror_unlocked_body(_fp) (((_fp)->_flags & _IO_ERR_SEEN) != 0)"
0x00003109: "__USER_LABEL_PREFIX__ "
0x00003120: "__WINT_TYPE__ unsigned int"
0x0000313b: "EOF (-1)"
0x00003144: "__INT16_MAX__ 0x7fff"
0x00003159: "_POSIX_C_SOURCE 200809L"
0x00003171: "__SCHAR_WIDTH__ 8"
0x00003183: "__UINT32_C(c) c ## U"
0x00003198: "__INT_FAST32_TYPE__ long int"
0x000031b5: "__GNUC_VA_LIST "
0x000031c5: "__VERSION__ \"11.3.0\""
0x000031da: "__SIZEOF_DOUBLE__ 8"
0x000031ee: "__GNUC_PATCHLEVEL__ 0"
0x00003204: "__UINT8_C(c) c"
0x00003213: "_SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))"
0x0000324c: "__BLKCNT64_T_TYPE __SQUAD_TYPE"
0x0000326b: "__USE_FORTIFY_LEVEL"
0x0000327f: "__GLIBC_USE_LIB_EXT2"
0x00003294: "__WINT_MIN__ 0U"
0x000032a4: "__LDBL_MANT_DIG__ 64"
0x000032b9: "SEEK_SET 0"
0x000032c4: "timersub(a,b,result) do { (result)->tv_sec = (a)->tv_sec - (b)->tv_sec; (result)->tv_usec = (a)->tv_usec - (b)->tv_usec; if ((result)->tv_usec < 0) { --(result)->tv_sec; (result)->tv_usec += 1000000; } } while (0)"
0x0000339a: "__bos0(ptr) __builtin_object_size (ptr, 0)"
0x000033c5: "__FLT_NORM_MAX__ 3.40282346638528859811704183484516925e+38F"
0x00003401: "__STDC_UTF_16__ 1"
0x00003413: "__LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L"
0x0000344f: "__FLT32_IS_IEC_60559__ 2"
0x00003468: "__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 1"
0x00003491: "__attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))"
0x000034d2: "__always_inline"
0x000034e2: "__timeval_defined 1"
0x000034f6: "__f64(x) x ##f64"
0x00003507: "__CFLOAT128 _Complex _Float128"
0x00003526: "__LDBL_HAS_INFINITY__ 1"
0x0000353e: "__USE_POSIX 1"
0x0000354c: "__glibc_unsafe_len(__l,__s,__osz) (__glibc_unsigned_or_positive (__l) && __builtin_constant_p (__glibc_safe_len_cond ((__SIZE_TYPE__) (__l), __s, __osz)) && !__glibc_safe_len_cond ((__SIZE_TYPE__) (__l), __s, __osz))"
0x00003625: "__GCC_IEC_559_COMPLEX 2"
0x0000363d: "__SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)"
0x0000366a: "__HAVE_FLOATN_NOT_TYPEDEF 1"
0x00003686: "__f64x(x) x ##f64x"
0x00003699: "__SIZEOF_WCHAR_T__ 4"
0x000036ae: "__attribute_deprecated__ __attribute__ ((__deprecated__))"
0x000036e8: "__FLT128_MIN_10_EXP__ (-4931)"
0x00003706: "__FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__"
0x00003733: "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1"
0x00003758: "__CFLOAT64 _Complex _Float64"
0x00003775: "__DEC32_MANT_DIG__ 7"
0x0000378a: "__FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32"
0x000037cc: "__attribute_returns_twice__ __attribute__ ((__returns_twice__))"
0x0000380c: "__UINT_FAST16_MAX__ 0xffffffffffffffffUL"
0x00003835: "__attribute_nonstring__ __attribute__ ((__nonstring__))"
0x0000386d: "timerisset(tvp) ((tvp)->tv_sec || (tvp)->tv_usec)"
0x0000389f: "__INT32_MAX__ 0x7fffffff"
0x000038b8: "__FSID_T_TYPE struct { int __val[2]; }"
0x000038df: "__FSBLKCNT64_T_TYPE __UQUAD_TYPE"
0x00003900: "__attr_access_none(argno) __attribute__ ((__access__ (__none__, argno)))"
0x00003949: "__glibc_objsize(__o) __bos (__o)"
0x0000396a: "__ATOMIC_ACQUIRE 2"
0x0000397d: "__UINT16_C(c) c"
0x0000398d: "__INT64_MAX__ 0x7fffffffffffffffL"
0x000039af: "__need_size_t "
0x000039be: "__bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)"
0x000039fe: "__glibc_has_extension(ext) 0"
0x00003a1b: "__SEG_GS 1"
0x00003a26: "__SSE_MATH__ 1"
0x00003a35: "_ATFILE_SOURCE 1"
0x00003a46: "__UINTMAX_TYPE__ long unsigned int"
0x00003a69: "__suseconds_t_defined "
0x00003a80: "__CFLOAT64X _Complex _Float64x"
0x00003a9f: "__LEAF , __leaf__"
0x00003ab1: "__DEC128_MAX_EXP__ 6145"
0x00003ac9: "__f128(x) x ##f128"
0x00003adc: "__fortify_function __extern_always_inline __attribute_artificial__"
0x00003b1f: "__SIG_ATOMIC_WIDTH__ 32"
0x00003b37: "__CONCAT(x,y) x ## y"
0x00003b4c: "__attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))"
0x00003b95: "__SHRT_MAX__ 0x7fff"
0x00003ba9: "__GCC_ATOMIC_WCHAR_T_LOCK_FREE 2"
0x00003bca: "__attr_dealloc(dealloc,argno) __attribute__ ((__malloc__ (dealloc, argno)))"
0x00003c16: "_IO_USER_LOCK 0x8000"
0x00003c2b: "__ORDER_PDP_ENDIAN__ 3412"
0x00003c45: "__HAVE_DISTINCT_FLOAT64 0"
0x00003c5f: "TMP_MAX 238328"
0x00003c6e: "__FLT_DECIMAL_DIG__ 9"
0x00003c84: "__UWORD_TYPE unsigned long int"
0x00003ca3: "__FLT64_MAX_10_EXP__ 308"
0x00003cbc: "__STRING(x) #x"
0x00003ccb: "__LDBL_MIN_EXP__ (-16381)"
0x00003ce5: "__WINT_WIDTH__ 32"
0x00003cf7: "_BITS_TYPESIZES_H 1"
0x00003d0b: "__FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x"
0x00003d4a: "__LONG_LONG_PAIR(HI,LO) LO, HI"
0x00003d69: "__INT_FAST8_MAX__ 0x7f"
0x00003d80: "__SIZEOF_INT__ 4"
0x00003d91: "__FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32"
0x00003dcf: "__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION "
0x00003e00: "ITIMER_REAL ITIMER_REAL"
0x00003e18: "__SWORD_TYPE long int"
0x00003e2e: "__GLIBC_MINOR__ 35"
0x00003e41: "__LONG_MAX__ 0x7fffffffffffffffL"
0x00003e62: "__FLT128_HAS_QUIET_NAN__ 1"
0x00003e7d: "__DEC64_MAX_EXP__ 385"
0x00003e93: "__need_size_t"
0x00003ea1: "__FLT32X_MIN_10_EXP__ (-307)"
0x00003ebe: "__USE_POSIX2"
0x00003ecb: "__OFF_T_TYPE __SYSCALL_SLONG_TYPE"
0x00003eed: "__UINTMAX_C(c) c ## UL"
0x00003f04: "__getc_unlocked_body(_fp) (__glibc_unlikely ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)"
0x00003f99: "__CHAR32_TYPE__ unsigned int"
0x00003fb6: "__FLT64X_HAS_INFINITY__ 1"
0x00003fd0: "__USE_FORTIFY_LEVEL 0"
0x00003fe6: "__DEC128_MIN__ 1E-6143DL"
0x00003fff: "__FLT32X_MIN_EXP__ (-1021)"
0x0000401a: "__off_t_defined "
0x0000402b: "__INTPTR_WIDTH__ 64"
0x0000403f: "__INO_T_TYPE __SYSCALL_ULONG_TYPE"
0x00004061: "__UINT_FAST8_TYPE__ unsigned char"
0x00004083: "__INT32_C(c) c"
0x00004092: "__FSFILCNT64_T_TYPE __UQUAD_TYPE"
0x000040b3: "__LDBL_HAS_QUIET_NAN__ 1"
0x000040cc: "__INT8_TYPE__ signed char"
0x000040e6: "__WINT_MAX__ 0xffffffffU"
0x000040ff: "__linux 1"
0x00004109: "____sigset_t_defined "
0x0000411f: "__attribute_copy__"
0x00004132: "__LDBL_NORM_MAX__ 1.18973149535723176502126385303097021e+4932L"
0x00004171: "__HAVE_FLOAT128_UNLIKE_LDBL (__HAVE_DISTINCT_FLOAT128 && __LDBL_MANT_DIG__ != 113)"
0x000041c4: "__UINT32_TYPE__ unsigned int"
0x000041e1: "__USE_ATFILE"
0x000041ee: "__USE_XOPEN2K8"
0x000041fd: "__REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)"
0x00004247: "__FD_SET(d,s) ((void) (__FDS_BITS (s)[__FD_ELT(d)] |= __FD_MASK(d)))"
0x0000428c: "P_tmpdir \"/tmp\""
0x0000429c: "__REDIRECT_NTH(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROW"
0x000042ed: "_IO_ERR_SEEN 0x0020"
0x00004301: "__USE_XOPEN"
0x0000430d: "__FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128"
0x0000434e: "__glibc_fortify(f,__l,__s,__osz,...) (__glibc_safe_or_unknown_len (__l, __s, __osz) ? __ ## f ## _alias (__VA_ARGS__) : (__glibc_unsafe_len (__l, __s, __osz) ? __ ## f ## _chk_warn (__VA_ARGS__, __osz) : __ ## f ## _chk (__VA_ARGS__, __osz)))"
0x00004441: "_POSIX_C_SOURCE"
0x00004451: "__THROW __attribute__ ((__nothrow__ __LEAF))"
0x0000447e: "__SIZEOF_LONG_LONG__ 8"
0x00004495: "__putc_unlocked_body(_ch,_fp) (__glibc_unlikely ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))"
0x00004553: "__UINT8_TYPE__ unsigned char"
0x00004570: "__SHRT_WIDTH__ 16"
0x00004582: "__SSE2_MATH__ 1"
0x00004592: "__STDC_IEC_559__ 1"
0x000045a5: "__S64_TYPE long int"
0x000045b9: "__FLT64_NORM_MAX__ 1.79769313486231570814527423731704357e+308F64"
0x000045fa: "__FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE"
0x00004621: "__HAVE_FLOAT128X 0"
0x00004634: "__INT_FAST32_WIDTH__ 64"
0x0000464c: "__USE_DYNAMIC_STACK_SIZE"
0x00004665: "__HAVE_DISTINCT_FLOAT32 0"
0x0000467f: "_DEFAULT_SOURCE 1"
0x00004691: "__SUSECONDS64_T_TYPE __SQUAD_TYPE"
0x000046b3: "__GLIBC_USE_IEC_60559_TYPES_EXT 0"
0x000046d5: "FD_CLR(fd,fdsetp) __FD_CLR (fd, fdsetp)"
0x000046fd: "__SIZEOF_POINTER__ 8"
0x00004712: "__FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64"
0x00004751: "__FLT64X_MANT_DIG__ 64"
0x00004768: "_DEFAULT_SOURCE"
0x00004778: "__WCHAR_MAX__ 0x7fffffff"
0x00004791: "__need___va_list "
0x000047a3: "__FLT_MANT_DIG__ 24"
0x000047b7: "__WORDSIZE 64"
0x000047c5: "__INT_WIDTH__ 32"
0x000047d6: "__LDBL_DECIMAL_DIG__ 21"
0x000047ee: "__GCC_ATOMIC_POINTER_LOCK_FREE 2"
0x0000480f: "__stub___compat_bdflush "
0x00004828: "FOPEN_MAX"
0x00004832: "main"
0x00004837: "__SEG_FS 1"
0x00004842: "__P(args) args"
0x00004851: "__UINT_FAST16_TYPE__ long unsigned int"
0x00004878: "__GLIBC__ 2"
0x00004884: "__STDC_VERSION__ 201710L"
0x0000489d: "__glibc_macro_warning1(message) _Pragma (#message)"
0x000048d0: "__GCC_ATOMIC_CHAR32_T_LOCK_FREE 2"
0x000048f2: "__glibc_likely(cond) __builtin_expect ((cond), 1)"
0x00004924: "__unix 1"
0x0000492d: "__CHAR_BIT__ 8"
0x0000493c: "__CLOCK_T_TYPE __SYSCALL_SLONG_TYPE"
0x00004960: "__ATOMIC_HLE_ACQUIRE 65536"
0x0000497b: "__STDC_HOSTED__ 1"
0x0000498d: "__SIZE_WIDTH__ 64"
0x0000499f: "__REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)"
0x000049e1: "__STDC_IEC_60559_BFP__ 201404L"
0x00004a00: "_STDIO_H 1"
0x00004a0b: "__HAVE_DISTINCT_FLOAT128 1"
0x00004a26: "__ASMNAME2(prefix,cname) __STRING (prefix) cname"
0x00004a57: "__returns_nonnull __attribute__ ((__returns_nonnull__))"
0x00004a8f: "__LONG_WIDTH__ 64"
0x00004aa1: "__glibc_safe_len_cond(__l,__s,__osz) ((__l) <= (__osz) / (__s))"
0x00004ae1: "__USE_XOPEN2KXSI"
0x00004af2: "__attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))"
0x00004b3b: "__k8 1"
0x00004b42: "__GCC_ATOMIC_LLONG_LOCK_FREE 2"
0x00004b61: "__FLT_MAX_EXP__ 128"
0x00004b75: "__restrict_arr __restrict"
0x00004b8f: "__ATOMIC_ACQ_REL 4"
0x00004ba2: "__attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))"
0x00004bf5: "__feof_unlocked_body(_fp) (((_fp)->_flags & _IO_EOF_SEEN) != 0)"
0x00004c35: "__INT64_TYPE__ long int"
0x00004c4d: "__FLT_MIN__ 1.17549435082228750796873653722224568e-38F"
0x00004c84: "__U64_TYPE unsigned long int"
0x00004ca1: "_SYS_TIME_H 1"
0x00004caf: "__HAVE_FLOAT64X 1"
0x00004cc1: "__attr_dealloc_free __attr_dealloc (__builtin_free, 1)"
0x00004cf8: "timeradd(a,b,result) do { (result)->tv_sec = (a)->tv_sec + (b)->tv_sec; (result)->tv_usec = (a)->tv_usec + (b)->tv_usec; if ((result)->tv_usec >= 1000000) { ++(result)->tv_sec; (result)->tv_usec -= 1000000; } } while (0)"
0x00004dd5: "__USE_GNU"
0x00004ddf: "FOPEN_MAX 16"
0x00004dec: "__HAVE_FLOAT32 1"
0x00004dfd: "__FXSR__ 1"
0x00004e08: "__LEAF_ATTR __attribute__ ((__leaf__))"
0x00004e2f: "__INT_LEAST32_WIDTH__ 32"
0x00004e48: "__GNUC_WIDE_EXECUTION_CHARSET_NAME \"UTF-32LE\""
0x00004e76: "__glibc_clang_prereq(maj,min) 0"
0x00004e96: "__SYSCALL_SLONG_TYPE __SLONGWORD_TYPE"
0x00004ebc: "__linux__ 1"
0x00004ec8: "__PIC__ 2"
0x00004ed2: "__time_t_defined 1"
0x00004ee5: "__struct_FILE_defined 1"
0x00004efd: "__DEC32_MIN_EXP__ (-94)"
0x00004f15: "_POSIX_SOURCE 1"
0x00004f25: "__GLIBC_USE_DEPRECATED_SCANF 0"
0x00004f44: "__GLIBC_USE_IEC_60559_BFP_EXT"
0x00004f62: "__SIZE_MAX__ 0xffffffffffffffffUL"
0x00004f84: "__UID_T_TYPE __U32_TYPE"
0x00004f9c: "__ULONGWORD_TYPE unsigned long int"
0x00004fbf: "stdin stdin"
0x00004fcb: "FD_ZERO(fdsetp) __FD_ZERO (fdsetp)"
0x00004fee: "__GCC_ATOMIC_SHORT_LOCK_FREE 2"
0x0000500d: "__FLT64X_DECIMAL_DIG__ 21"
0x00005027: "__glibc_unsigned_or_positive(__l) ((__typeof (__l)) 0 < (__typeof (__l)) -1 || (__builtin_constant_p (__l) && (__l) > 0))"
0x000050a1: "__USE_XOPEN_EXTENDED"
0x000050b6: "__INT_FAST16_MAX__ 0x7fffffffffffffffL"
0x000050dd: "__FLOAT_WORD_ORDER __BYTE_ORDER"
0x000050fd: "_BITS_FLOATN_COMMON_H "
0x00005114: "__FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F"
0x0000514e: "FILENAME_MAX 4096"
0x00005160: "stderr stderr"
0x0000516e: "__FLT128_IS_IEC_60559__ 2"
0x00005188: "__FLT_EVAL_METHOD_TS_18661_3__ 0"
0x000051a9: "__DBL_HAS_INFINITY__ 1"
0x000051c0: "__attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))"
0x0000520a: "__INT64_C(c) c ## L"
0x0000521e: "__END_DECLS "
0x0000522b: "__FLT64_MIN_EXP__ (-1021)"
0x00005245: "__PTRDIFF_TYPE__ long int"
0x0000525f: "__CLOCKID_T_TYPE __S32_TYPE"
0x0000527b: "__INT_FAST16_TYPE__ long int"
0x00005298: "__DBL_NORM_MAX__ ((double)1.79769313486231570814527423731704357e+308L)"
0x000052df: "__DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL"
0x00005324: "_STDC_PREDEF_H 1"
0x00005335: "__FD_ELT(d) ((d) / __NFDBITS)"
0x00005353: "__USE_LARGEFILE"
0x00005363: "____FILE_defined 1"
0x00005376: "__SIZEOF_FLOAT80__ 16"
0x0000538c: "__FLT32X_HAS_QUIET_NAN__ 1"
0x000053a7: "__DBL_MAX_10_EXP__ 308"
0x000053be: "__USE_MISC 1"
0x000053cb: "FD_SETSIZE __FD_SETSIZE"
0x000053e3: "__pic__ 2"
0x000053ed: "__GNUC_STDC_INLINE__ 1"
0x00005404: "__SSE__ 1"
0x0000540e: "__GLIBC_USE_IEC_60559_FUNCS_EXT 0"
0x00005430: "__BIGGEST_ALIGNMENT__ 16"
0x00005449: "__OFF_T_MATCHES_OFF64_T 1"
0x00005463: "__FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128"
0x000054a9: "__GLIBC_USE_IEC_60559_BFP_EXT 0"
0x000054c9: "_SYS_SELECT_H 1"
0x000054d9: "__stub_revoke "
0x000054e8: "__INTMAX_TYPE__ long int"
0x00005501: "__FLT_MIN_EXP__ (-125)"
0x00005518: "__SSP_STRONG__ 3"
0x00005529: "__errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))"
0x00005578: "__DEC128_MAX__ 9.999999999999999999999999999999999E6144DL"
0x000055b2: "__LITTLE_ENDIAN 1234"
0x000055c7: "__REGISTER_PREFIX__ "
0x000055dc: "__LDBL_REDIR_DECL(name) "
0x000055f5: "__OFF64_T_TYPE __SQUAD_TYPE"
0x00005611: "__USE_ISOC11"
0x0000561e: "__FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE"
0x00005645: "__DEV_T_TYPE __UQUAD_TYPE"
0x0000565f: "__CPU_MASK_TYPE __SYSCALL_ULONG_TYPE"
0x00005684: "__UINT_LEAST32_MAX__ 0xffffffffU"
0x000056a5: "__glibc_has_builtin(name) __has_builtin (name)"
0x000056d4: "__ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)"
0x0000570f: "__FLT32X_MAX_10_EXP__ 308"
0x00005729: "__amd64 1"
0x00005733: "__BYTE_ORDER __LITTLE_ENDIAN"
0x00005750: "__FLT32X_NORM_MAX__ 1.79769313486231570814527423731704357e+308F32x"
0x00005793: "__FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64"
0x000057d6: "__WORDSIZE_TIME64_COMPAT32 1"
0x000057f3: "__FLT32_MAX_10_EXP__ 38"
0x0000580b: "__FLT128_DECIMAL_DIG__ 36"
0x00005825: "__PTRDIFF_WIDTH__ 64"
0x0000583a: "__INT_LEAST32_MAX__ 0x7fffffff"
0x00005859: "__UINT_FAST64_TYPE__ long unsigned int"
0x00005880: "__TIMER_T_TYPE void *"
0x00005896: "_STRUCT_TIMESPEC 1"
0x000058a9: "__THROWNL __attribute__ ((__nothrow__))"
0x000058d1: "__LDBL_MAX_10_EXP__ 4932"
0x000058ea: "__DEC64_MIN__ 1E-383DD"
0x00005901: "__FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32"
0x0000593c: "__DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)"
0x00005981: "_IOLBF 1"
0x0000598a: "__PRAGMA_REDEFINE_EXTNAME 1"
0x000059a6: "__SIG_ATOMIC_TYPE__ int"
0x000059be: "__FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x"
0x00005a04: "__USE_POSIX"
0x00005a10: "__FLT128_HAS_DENORM__ 1"
0x00005a28: "__GLIBC_USE_DEPRECATED_SCANF"
0x00005a45: "__sigset_t_defined 1"
0x00005a5a: "__DBL_DECIMAL_DIG__ 17"
0x00005a71: "__LDBL_HAS_DENORM__ 1"
0x00005a87: "__RLIM64_T_TYPE __UQUAD_TYPE"
0x00005aa4: "__attribute_nonnull__(params) __attribute__ ((__nonnull__ params))"
0x00005ae7: "__FLT64_MANT_DIG__ 53"
0x00005afd: "__DEC64_MANT_DIG__ 16"
0x00005b13: "__FLT_HAS_DENORM__ 1"
0x00005b28: "__INT_FAST64_WIDTH__ 64"
0x00005b40: "__DECIMAL_DIG__ 21"

.debug_line_str contents:
0x00000000: "simple.c"
0x00000009: "/home/zack/Tools/MQP/code_slicer/examples/simple"
0x0000003a: "/usr/include"
0x00000047: "/usr/include/x86_64-linux-gnu/sys"
0x00000069: "/usr/include/x86_64-linux-gnu/bits"
0x0000008c: "/usr/include/x86_64-linux-gnu/gnu"
0x000000ae: "/usr/include/x86_64-linux-gnu/bits/types"
0x000000d7: "/usr/lib/gcc/x86_64-linux-gnu/11/include"
0x00000100: "stdio.h"
0x00000108: "stdc-predef.h"
0x00000116: "time.h"
0x0000011d: "features.h"
0x00000128: "features-time64.h"
0x0000013a: "wordsize.h"
0x00000145: "timesize.h"
0x00000150: "cdefs.h"
0x00000158: "long-double.h"
0x00000166: "stubs.h"
0x0000016e: "stubs-64.h"
0x00000179: "types.h"
0x00000181: "typesizes.h"
0x0000018d: "time_t.h"
0x00000196: "struct_timeval.h"
0x000001a7: "select.h"
0x000001b0: "__sigset_t.h"
0x000001bd: "struct_timespec.h"
0x000001cf: "endian.h"
0x000001d8: "endianness.h"
0x000001e5: "libc-header-start.h"
0x000001f9: "stddef.h"
0x00000202: "stdarg.h"
0x0000020b: "__fpos_t.h"
0x00000216: "__mbstate_t.h"
0x00000224: "__fpos64_t.h"
0x00000231: "__FILE.h"
0x0000023a: "struct_FILE.h"
0x00000248: "stdio_lim.h"
0x00000254: "floatn.h"
0x0000025d: "floatn-common.h"
